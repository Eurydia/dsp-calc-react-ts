{"version":3,"file":"index-5uKo4nEV.js","sources":["../../src/App/theme.ts","../../src/core/solver.ts","../../src/core/formatLocaleNumber.ts","../../src/App/components/EditorResultItemTable.tsx","../../src/App/components/EditorResultPowerTable.tsx","../../src/App/components/CollapseRegion.tsx","../../src/App/components/StyledSelect.tsx","../../src/App/components/StyledHorizontalStack.tsx","../../src/App/components/TooltipIconButton.tsx","../../src/App/components/StyledTextField.tsx","../../src/App/components/EditorConfig.tsx","../../src/App/components/InfoCard.tsx","../../src/App/components/EditorResultAux.tsx","../../src/hooks/useContent.ts","../../src/hooks/useFacility.ts","../../src/hooks/useRecipe.ts","../../src/hooks/useProlifEffect.ts","../../src/core/safeParseClamp.ts","../../src/hooks/useRecord.ts","../../src/hooks/useSorterRecord.ts","../../src/hooks/useFlowrateRecord.ts","../../src/hooks/useClampedRecord.ts","../../src/App/pages/Editor/EditorLayout.tsx","../../src/App/components/EditorTarget.tsx","../../src/core/solverConstraint.ts","../../src/core/solverCapacity.ts","../../src/App/pages/Editor/Editor.tsx","../../src/App/App.tsx","../../src/main.tsx"],"sourcesContent":["import {\r\n\talpha,\r\n\tcreateTheme,\r\n} from \"@mui/material\";\r\n\r\nexport const theme = createTheme({\r\n\tcomponents: {\r\n\t\tMuiCssBaseline: {\r\n\t\t\tstyleOverrides: `img {\r\n\t\t\t\t\tloadingL: lazy;\r\n\t\t\t\t\twidth: auto;\r\n\t\t\t\t\theight: 40px;\r\n\t\t\t}`,\r\n\t\t},\r\n\t\tMuiTypography: {\r\n\t\t\tstyleOverrides: {\r\n\t\t\t\troot: {\r\n\t\t\t\t\t\"&.MuiTypography-h1\": {\r\n\t\t\t\t\t\tfontSize: \"1.4rem\",\r\n\t\t\t\t\t\tfontWeight: \"500\",\r\n\t\t\t\t\t\tcolor: \"#C8AA81\",\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\"&.MuiTypography-h2\": {\r\n\t\t\t\t\t\tfontSize: \"1.2rem\",\r\n\t\t\t\t\t\tfontWeight: \"400\",\r\n\t\t\t\t\t\tcolor: \"#C8AA81\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"&.MuiTypography-subtitle1\": {\r\n\t\t\t\t\t\tfontSize: \"0.9rem\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tMuiTableCell: {\r\n\t\t\tstyleOverrides: {\r\n\t\t\t\troot: {\r\n\t\t\t\t\t\"&.MuiTableCell-head\": {\r\n\t\t\t\t\t\tcolor: \"#C8AA81\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tMuiList: {\r\n\t\t\tstyleOverrides: {\r\n\t\t\t\troot: {\r\n\t\t\t\t\t\"&.MuiList-subheader\": {\r\n\t\t\t\t\t\tcolor: \"#C8AA81\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tMuiListItemIcon: {\r\n\t\t\tstyleOverrides: {\r\n\t\t\t\troot: { color: \"#CEB697\" },\r\n\t\t\t},\r\n\t\t},\r\n\t\tMuiIconButton: {\r\n\t\t\tstyleOverrides: {\r\n\t\t\t\troot: { color: \"#7ABBAD\" },\r\n\t\t\t},\r\n\t\t},\r\n\t\tMuiListItemText: {\r\n\t\t\tstyleOverrides: {\r\n\t\t\t\troot: ({ theme: t }) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tcolor: t.palette.text.primary,\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tpalette: {\r\n\t\tmode: \"dark\",\r\n\t\ttext: {\r\n\t\t\tprimary: alpha(\"#fff\", 0.87),\r\n\t\t},\r\n\t\tprimary: {\r\n\t\t\tmain: \"#7ABBAD\",\r\n\t\t},\r\n\t\tbackground: {\r\n\t\t\tpaper: \"#181D22\",\r\n\t\t},\r\n\t},\r\n});\r\n","import { sorterFromLabel } from \"assets/sorter.mts\";\r\nimport { facilityFromLabel } from \"assets/facility.mts\";\r\nimport {\r\n\tproliferatorFromLabel,\r\n\tproliferatorLabelFromSprayCount,\r\n} from \"assets/proliferator.mts\";\r\nimport { recipeFromLabel } from \"assets/recipes/recipe.mts\";\r\n\r\nexport const solveFacilityPerArrayCount = (\r\n\tfacilityLabel: string,\r\n\trecipeLabel: string,\r\n\tprolifEffectLabel: string,\r\n\tflowrateRecord: Record<string, string>,\r\n): number => {\r\n\tconst _facility = facilityFromLabel(\r\n\t\tfacilityLabel,\r\n\t);\r\n\tconst _recipe = recipeFromLabel(recipeLabel);\r\n\tconst _prolifEffect = proliferatorFromLabel(\r\n\t\tprolifEffectLabel,\r\n\t);\r\n\r\n\tconst _flowrateRecord: Record<string, number> =\r\n\t\t{};\r\n\tfor (const entry of Object.entries(\r\n\t\tflowrateRecord,\r\n\t)) {\r\n\t\tconst [itemLabel, flowrate] = entry;\r\n\t\tlet parsedFlowrate =\r\n\t\t\tNumber.parseInt(flowrate);\r\n\t\tif (Number.isNaN(parsedFlowrate)) {\r\n\t\t\tparsedFlowrate = 0;\r\n\t\t}\r\n\t\t_flowrateRecord[itemLabel] = parsedFlowrate;\r\n\t}\r\n\r\n\tconst cycleMuliplier =\r\n\t\t_facility.cycleMultiplier *\r\n\t\t_prolifEffect.cycleMultiplier;\r\n\tconst cyclesPerMinutePerFacility =\r\n\t\t(60 / _recipe.cycleTimeSecond) *\r\n\t\tcycleMuliplier;\r\n\r\n\tconst productMultiplier =\r\n\t\t_prolifEffect.productMultiplier;\r\n\r\n\tlet materialBottleNeck = 0;\r\n\tfor (const entry of Object.entries(\r\n\t\t_recipe.materialRecord,\r\n\t)) {\r\n\t\tconst [itemLabel, ratio] = entry;\r\n\t\tconst itemFlowrate =\r\n\t\t\t_flowrateRecord[itemLabel];\r\n\t\tconst currBottleNeck =\r\n\t\t\titemFlowrate /\r\n\t\t\t(ratio * cyclesPerMinutePerFacility);\r\n\t\tif (\r\n\t\t\t(materialBottleNeck === 0 &&\r\n\t\t\t\tcurrBottleNeck > 0) ||\r\n\t\t\tcurrBottleNeck < materialBottleNeck\r\n\t\t) {\r\n\t\t\tmaterialBottleNeck = currBottleNeck;\r\n\t\t}\r\n\t}\r\n\r\n\tlet productBottleNeck = 0;\r\n\tfor (const entry of Object.entries(\r\n\t\t_recipe.productRecord,\r\n\t)) {\r\n\t\tconst [itemLabel, ratio] = entry;\r\n\t\tconst itemFlowrate =\r\n\t\t\t_flowrateRecord[itemLabel];\r\n\t\tconst currBottleNeck =\r\n\t\t\titemFlowrate /\r\n\t\t\t(ratio *\r\n\t\t\t\tcyclesPerMinutePerFacility *\r\n\t\t\t\tproductMultiplier);\r\n\t\tif (\r\n\t\t\t(productBottleNeck === 0 &&\r\n\t\t\t\tcurrBottleNeck > 0) ||\r\n\t\t\tcurrBottleNeck < productBottleNeck\r\n\t\t) {\r\n\t\t\tproductBottleNeck = currBottleNeck;\r\n\t\t}\r\n\t}\r\n\r\n\treturn Math.min(\r\n\t\tmaterialBottleNeck,\r\n\t\tproductBottleNeck,\r\n\t);\r\n};\r\n\r\nexport const solveIdleConsumptionMWPerFacility = (\r\n\tfacilityLabel: string,\r\n\tsorterRecord: Record<string, string>,\r\n): number => {\r\n\tlet sorterIdleConsumptionMW = 0;\r\n\tfor (const entry of Object.entries(\r\n\t\tsorterRecord,\r\n\t)) {\r\n\t\tconst [sorterLabel, count] = entry;\r\n\t\tlet parsedCount = Number.parseInt(count);\r\n\t\tif (Number.isNaN(parsedCount)) {\r\n\t\t\tparsedCount = 0;\r\n\t\t}\r\n\t\tsorterIdleConsumptionMW +=\r\n\t\t\tparsedCount *\r\n\t\t\tsorterFromLabel(sorterLabel)\r\n\t\t\t\t.idleConsumptionMW;\r\n\t}\r\n\tconst facility = facilityFromLabel(\r\n\t\tfacilityLabel,\r\n\t);\r\n\treturn (\r\n\t\tfacility.idleConsumptionMW +\r\n\t\tsorterIdleConsumptionMW\r\n\t);\r\n};\r\n\r\nexport const solveWorkConsumptionMWPerFacility = (\r\n\tfacilityLabel: string,\r\n\tprolifEffectLabel: string,\r\n\tsorterRecord: Record<string, string>,\r\n): number => {\r\n\tlet sorterWorkConsumptionMW = 0;\r\n\tfor (const entry of Object.entries(\r\n\t\tsorterRecord,\r\n\t)) {\r\n\t\tconst [sorterLabel, count] = entry;\r\n\t\tlet parsedCount = Number.parseInt(count);\r\n\t\tif (Number.isNaN(parsedCount)) {\r\n\t\t\tparsedCount = 0;\r\n\t\t}\r\n\t\tsorterWorkConsumptionMW +=\r\n\t\t\tparsedCount *\r\n\t\t\tsorterFromLabel(sorterLabel)\r\n\t\t\t\t.workConsumptionMW;\r\n\t}\r\n\tconst facility = facilityFromLabel(\r\n\t\tfacilityLabel,\r\n\t);\r\n\tconst prolifEffect = proliferatorFromLabel(\r\n\t\tprolifEffectLabel,\r\n\t);\r\n\tconst facilityWorkConsumptionMW =\r\n\t\tfacility.workConsumptionMW *\r\n\t\tprolifEffect.workConsumptionMultiplier;\r\n\r\n\treturn (\r\n\t\tfacilityWorkConsumptionMW +\r\n\t\tsorterWorkConsumptionMW\r\n\t);\r\n};\r\n\r\nexport const solveDemandPerMinutePerFacility = (\r\n\tfacilityLabel: string,\r\n\trecipeLabel: string,\r\n\tprolifEffectLabel: string,\r\n\tprolifSprayCount: string,\r\n): Record<string, number> => {\r\n\tconst _facility = facilityFromLabel(\r\n\t\tfacilityLabel,\r\n\t);\r\n\tconst {\r\n\t\tcycleTimeSecond,\r\n\t\tmaterialRecord,\r\n\t\tproductRecord,\r\n\t} = recipeFromLabel(recipeLabel);\r\n\tconst _prolifEffect = proliferatorFromLabel(\r\n\t\tprolifEffectLabel,\r\n\t);\r\n\r\n\tconst cycleMuliplier =\r\n\t\t_facility.cycleMultiplier *\r\n\t\t_prolifEffect.cycleMultiplier;\r\n\r\n\tconst cycles =\r\n\t\t(60 / cycleTimeSecond) * cycleMuliplier;\r\n\r\n\tconst demand: Record<string, number> = {};\r\n\tfor (const entry of Object.entries(\r\n\t\tmaterialRecord,\r\n\t)) {\r\n\t\tconst [itemLabel, ratio] = entry;\r\n\t\tdemand[itemLabel] = ratio * cycles;\r\n\t}\r\n\r\n\tconst _prolifSprayCount = Number.parseInt(\r\n\t\tprolifSprayCount,\r\n\t);\r\n\tif (\r\n\t\t!Number.isNaN(_prolifSprayCount) &&\r\n\t\t_prolifSprayCount > 0\r\n\t) {\r\n\t\tlet prolifMaterialCost = 0;\r\n\t\tfor (const ratio of Object.values(\r\n\t\t\tmaterialRecord,\r\n\t\t)) {\r\n\t\t\tprolifMaterialCost += cycles * ratio;\r\n\t\t}\r\n\r\n\t\tlet prolifProductCost = 0;\r\n\t\tfor (const ratio of Object.values(\r\n\t\t\tproductRecord,\r\n\t\t)) {\r\n\t\t\tprolifProductCost +=\r\n\t\t\t\tcycles *\r\n\t\t\t\tratio *\r\n\t\t\t\t_prolifEffect.productMultiplier;\r\n\t\t}\r\n\r\n\t\tconst prolifLabel =\r\n\t\t\tproliferatorLabelFromSprayCount(\r\n\t\t\t\t_prolifEffect.sprayCount,\r\n\t\t\t);\r\n\t\tdemand[`${prolifLabel} (materials)`] =\r\n\t\t\tprolifMaterialCost / _prolifSprayCount;\r\n\t\tdemand[`${prolifLabel} (products)`] =\r\n\t\t\tprolifProductCost / _prolifSprayCount;\r\n\t}\r\n\treturn demand;\r\n};\r\n\r\nexport const solveProductionPerMinutePerFacility =\r\n\t(\r\n\t\tfacilityLabel: string,\r\n\t\trecipeLabel: string,\r\n\t\tprolifEffectLabel: string,\r\n\t): Record<string, number> => {\r\n\t\tconst _facility = facilityFromLabel(\r\n\t\t\tfacilityLabel,\r\n\t\t);\r\n\t\tconst { cycleTimeSecond, productRecord } =\r\n\t\t\trecipeFromLabel(recipeLabel);\r\n\t\tconst _prolifEffect = proliferatorFromLabel(\r\n\t\t\tprolifEffectLabel,\r\n\t\t);\r\n\r\n\t\tconst cycleMuliplier =\r\n\t\t\t_facility.cycleMultiplier *\r\n\t\t\t_prolifEffect.cycleMultiplier;\r\n\r\n\t\tconst cycles =\r\n\t\t\t(60 / cycleTimeSecond) * cycleMuliplier;\r\n\r\n\t\tconst production: Record<string, number> = {};\r\n\t\tfor (const entry of Object.entries(\r\n\t\t\tproductRecord,\r\n\t\t)) {\r\n\t\t\tconst [itemLabel, ratio] = entry;\r\n\t\t\tproduction[itemLabel] =\r\n\t\t\t\tratio *\r\n\t\t\t\tcycles *\r\n\t\t\t\t_prolifEffect.productMultiplier;\r\n\t\t}\r\n\t\treturn production;\r\n\t};\r\n","export const formatNumber = (\r\n\tvalue: number,\r\n): string => {\r\n\treturn Number.parseFloat(\r\n\t\tvalue.toPrecision(6),\r\n\t).toLocaleString();\r\n};\r\n","import { FC } from \"react\";\r\n\r\nimport {\r\n\tPaper,\r\n\tTable,\r\n\tTableBody,\r\n\tTableCell,\r\n\tTableContainer,\r\n\tTableHead,\r\n\tTableRow,\r\n\tTypography,\r\n} from \"@mui/material\";\r\nimport {\r\n\tAddRounded,\r\n\tRemove,\r\n} from \"@mui/icons-material\";\r\n\r\nimport { ingredientIconFromLabel } from \"assets/ingredient.mts\";\r\nimport { formatNumber } from \"core/formatLocaleNumber\";\r\n\r\nconst labelToIcon = (label: string) => {\r\n\treturn ingredientIconFromLabel(\r\n\t\tlabel\r\n\t\t\t.replace(\" (materials)\", \"\")\r\n\t\t\t.replace(\" (products)\", \"\"),\r\n\t);\r\n};\r\n\r\ntype EditorResultItemTableProps = {\r\n\tfacilityNeededCount: number;\r\n\tfacilityPerArrayCount: number;\r\n\tmaterialFlowPerMinutePerFacility: Record<\r\n\t\tstring,\r\n\t\tnumber\r\n\t>;\r\n\tproductFlowPerMinutePerFacility: Record<\r\n\t\tstring,\r\n\t\tnumber\r\n\t>;\r\n};\r\nexport const EditorResultItemTable: FC<\r\n\tEditorResultItemTableProps\r\n> = (props) => {\r\n\tconst {\r\n\t\tfacilityNeededCount,\r\n\t\tfacilityPerArrayCount,\r\n\t\tmaterialFlowPerMinutePerFacility,\r\n\t\tproductFlowPerMinutePerFacility,\r\n\t} = props;\r\n\r\n\treturn (\r\n\t\t<Paper\r\n\t\t\tsquare\r\n\t\t\televation={2}\r\n\t\t\tsx={{\r\n\t\t\t\tpadding: 2,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<TableContainer>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell colSpan={1} />\r\n\t\t\t\t\t\t\t<TableCell colSpan={2}>\r\n\t\t\t\t\t\t\t\tItem (per minute)\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tTotal\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tPer Array\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tPer Facility\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t{Object.entries(\r\n\t\t\t\t\t\t\tmaterialFlowPerMinutePerFacility,\r\n\t\t\t\t\t\t).map(([label, value]) => (\r\n\t\t\t\t\t\t\t<TableRow key={label}>\r\n\t\t\t\t\t\t\t\t<TableCell colSpan={1}>\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\talt={label}\r\n\t\t\t\t\t\t\t\t\t\tsrc={labelToIcon(label)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell colSpan={2}>\r\n\t\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t{[\r\n\t\t\t\t\t\t\t\t\tvalue * facilityNeededCount,\r\n\t\t\t\t\t\t\t\t\tvalue * facilityPerArrayCount,\r\n\t\t\t\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t\t\t].map((data, index) => (\r\n\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\t\t\tkey={`demand-${index}`}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent=\"flex-end\"\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize=\"inherit\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Remove fontSize=\"inherit\" />\r\n\t\t\t\t\t\t\t\t\t\t\t{formatNumber(data)}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t{Object.entries(\r\n\t\t\t\t\t\t\tproductFlowPerMinutePerFacility,\r\n\t\t\t\t\t\t).map(([label, value]) => (\r\n\t\t\t\t\t\t\t<TableRow key={label}>\r\n\t\t\t\t\t\t\t\t<TableCell colSpan={1}>\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\talt={label}\r\n\t\t\t\t\t\t\t\t\t\tsrc={ingredientIconFromLabel(\r\n\t\t\t\t\t\t\t\t\t\t\tlabel,\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell colSpan={2}>\r\n\t\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t{[\r\n\t\t\t\t\t\t\t\t\tvalue * facilityNeededCount,\r\n\t\t\t\t\t\t\t\t\tvalue * facilityPerArrayCount,\r\n\t\t\t\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t\t\t].map((data, index) => (\r\n\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\tkey={`supply-${index}`}\r\n\t\t\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent=\"flex-end\"\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize=\"inherit\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddRounded fontSize=\"inherit\" />\r\n\t\t\t\t\t\t\t\t\t\t\t{formatNumber(data)}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</Paper>\r\n\t);\r\n};\r\n","import { FC } from \"react\";\r\n\r\nimport {\r\n\tPaper,\r\n\tTable,\r\n\tTableBody,\r\n\tTableCell,\r\n\tTableContainer,\r\n\tTableHead,\r\n\tTableRow,\r\n\tTypography,\r\n} from \"@mui/material\";\r\nimport { Remove } from \"@mui/icons-material\";\r\n\r\nimport { formatNumber } from \"core/formatLocaleNumber\";\r\n\r\ntype EditorResultPowerTableProps = {\r\n\tfacilityNeededCount: number;\r\n\tfacilityPerArrayCount: number;\r\n\tworkConsumptionPerFacility: number;\r\n\tidleConsumptionPerFacility: number;\r\n};\r\nexport const EditorResultPowerTable: FC<\r\n\tEditorResultPowerTableProps\r\n> = (props) => {\r\n\tconst {\r\n\t\tfacilityNeededCount,\r\n\t\tfacilityPerArrayCount,\r\n\t\tworkConsumptionPerFacility,\r\n\t\tidleConsumptionPerFacility,\r\n\t} = props;\r\n\r\n\treturn (\r\n\t\t<Paper\r\n\t\t\tsquare\r\n\t\t\televation={2}\r\n\t\t\tsx={{\r\n\t\t\t\tpadding: 2,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<TableContainer>\r\n\t\t\t\t<Table>\r\n\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell colSpan={3}>\r\n\t\t\t\t\t\t\t\tPower consumption (MW)\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tTotal\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tPer array\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tPer facility\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell colSpan={3}>\r\n\t\t\t\t\t\t\t\tWork\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t{[\r\n\t\t\t\t\t\t\t\tworkConsumptionPerFacility *\r\n\t\t\t\t\t\t\t\t\tfacilityNeededCount,\r\n\t\t\t\t\t\t\t\tworkConsumptionPerFacility *\r\n\t\t\t\t\t\t\t\t\tfacilityPerArrayCount,\r\n\t\t\t\t\t\t\t\tworkConsumptionPerFacility,\r\n\t\t\t\t\t\t\t].map((value, index) => (\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tkey={`supply-${index}`}\r\n\t\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent=\"flex-end\"\r\n\t\t\t\t\t\t\t\t\t\tfontSize=\"inherit\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Remove fontSize=\"inherit\" />\r\n\t\t\t\t\t\t\t\t\t\t{formatNumber(value)}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell colSpan={3}>\r\n\t\t\t\t\t\t\t\tIdle\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t{[\r\n\t\t\t\t\t\t\t\tidleConsumptionPerFacility *\r\n\t\t\t\t\t\t\t\t\tfacilityNeededCount,\r\n\t\t\t\t\t\t\t\tidleConsumptionPerFacility *\r\n\t\t\t\t\t\t\t\t\tfacilityPerArrayCount,\r\n\t\t\t\t\t\t\t\tidleConsumptionPerFacility,\r\n\t\t\t\t\t\t\t].map((value, index) => (\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\tkey={`supply-${index}`}\r\n\t\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent=\"flex-end\"\r\n\t\t\t\t\t\t\t\t\t\tfontSize=\"inherit\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Remove fontSize=\"inherit\" />\r\n\t\t\t\t\t\t\t\t\t\t{formatNumber(value)}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t</TableBody>\r\n\t\t\t\t</Table>\r\n\t\t\t</TableContainer>\r\n\t\t</Paper>\r\n\t);\r\n};\r\n","import {\r\n\tExpandLessRounded,\r\n\tExpandMoreRounded,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n\tCollapse,\r\n\tIconButton,\r\n\tStack,\r\n\tTooltip,\r\n} from \"@mui/material\";\r\nimport {\r\n\tFC,\r\n\tFragment,\r\n\tReactNode,\r\n\tuseState,\r\n} from \"react\";\r\n\r\ntype CollapseRegionProps = {\r\n\tchildren: ReactNode;\r\n\ttitle: ReactNode;\r\n};\r\nexport const CollapseRegion: FC<\r\n\tCollapseRegionProps\r\n> = (props) => {\r\n\tconst { title, children } = props;\r\n\tconst [collapsed, setCollapsed] =\r\n\t\tuseState(false);\r\n\r\n\tconst handleCollapseToggle = () => {\r\n\t\tsetCollapsed(!collapsed);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Stack\r\n\t\t\t\tdirection=\"row\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tjustifyContent=\"space-between\"\r\n\t\t\t>\r\n\t\t\t\t{title}\r\n\r\n\t\t\t\t<Tooltip\r\n\t\t\t\t\ttitle={\r\n\t\t\t\t\t\tcollapsed ? \"Expand\" : \"Collapse\"\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tonClick={handleCollapseToggle}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{collapsed ? (\r\n\t\t\t\t\t\t\t<ExpandMoreRounded />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<ExpandLessRounded />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</Stack>\r\n\t\t\t<Collapse in={!collapsed}>\r\n\t\t\t\t{children}\r\n\t\t\t</Collapse>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n","import { FC } from \"react\";\r\n\r\nimport {\r\n\tListItemIcon,\r\n\tListItemText,\r\n\tMenuItem,\r\n\tTextField,\r\n} from \"@mui/material\";\r\n\r\ntype StyledSelectProps = {\r\n\tsortOptions?: boolean;\r\n\tlabel: string;\r\n\tvalue: string;\r\n\tonValueChange: (nextValue: string) => void;\r\n\toptionToIcon: (label: string) => string;\r\n\toptions: string[];\r\n\tdisabledOptions: string[];\r\n};\r\nexport const StyledSelect: FC<\r\n\tStyledSelectProps\r\n> = (props) => {\r\n\tconst {\r\n\t\tsortOptions,\r\n\t\tlabel,\r\n\t\tvalue,\r\n\t\tonValueChange,\r\n\t\toptionToIcon,\r\n\t\toptions,\r\n\t\tdisabledOptions,\r\n\t} = props;\r\n\r\n\tconst _options = options.filter(\r\n\t\t(option) => !disabledOptions.includes(option),\r\n\t);\r\n\r\n\tconst _disabledOptions = disabledOptions;\r\n\tif (sortOptions) {\r\n\t\t_options.sort();\r\n\t\t_disabledOptions.sort();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\tselect\r\n\t\t\tfullWidth\r\n\t\t\tlabel={label}\r\n\t\t\tvalue={value}\r\n\t\t\tonChange={(event) =>\r\n\t\t\t\tonValueChange(event.target.value)\r\n\t\t\t}\r\n\t\t\tSelectProps={{\r\n\t\t\t\tSelectDisplayProps: {\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{_options.map((option) => (\r\n\t\t\t\t<MenuItem\r\n\t\t\t\t\tkey={option}\r\n\t\t\t\t\tvalue={option}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\talt={option}\r\n\t\t\t\t\t\t\tsrc={optionToIcon(option)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t<ListItemText>{option}</ListItemText>\r\n\t\t\t\t</MenuItem>\r\n\t\t\t))}\r\n\t\t\t{_disabledOptions.map((option) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\tkey={option}\r\n\t\t\t\t\t\tvalue={option}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{option}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</TextField>\r\n\t);\r\n};\r\n","import { Stack, StackProps } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\n\r\nexport const StyledHorizontalStack: FC<\r\n\tStackProps\r\n> = (props) => {\r\n\tconst { children, ...rest } = props;\r\n\treturn (\r\n\t\t<Stack\r\n\t\t\tspacing={2}\r\n\t\t\tdirection=\"row\"\r\n\t\t\talignItems=\"center\"\r\n\t\t\tjustifyContent=\"left\"\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</Stack>\r\n\t);\r\n};\r\n","import { FC, ReactElement } from \"react\";\r\n\r\nimport {\r\n\tIconButton,\r\n\tTooltip,\r\n} from \"@mui/material\";\r\n\r\ntype TooltipIconButtonProps = {\r\n\tlabel: string;\r\n\ttitle: string;\r\n\tonClick: () => void;\r\n\tchildren: ReactElement;\r\n};\r\nexport const TooltipIconButton: FC<\r\n\tTooltipIconButtonProps\r\n> = (props) => {\r\n\tconst { children, label, onClick, title } =\r\n\t\tprops;\r\n\treturn (\r\n\t\t<IconButton\r\n\t\t\tonClick={onClick}\r\n\t\t\taria-label={label}\r\n\t\t>\r\n\t\t\t<Tooltip\r\n\t\t\t\tdescribeChild\r\n\t\t\t\ttitle={title}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t</Tooltip>\r\n\t\t</IconButton>\r\n\t);\r\n};\r\n","import {\r\n\tChangeEvent,\r\n\tFC,\r\n\tReactNode,\r\n} from \"react\";\r\nimport {\r\n\tDivider,\r\n\tInputAdornment,\r\n\tTextField,\r\n} from \"@mui/material\";\r\n\r\nimport { StyledHorizontalStack } from \"components/StyledHorizontalStack\";\r\nimport { TooltipIconButton } from \"components/TooltipIconButton\";\r\nimport { RestartAltRounded } from \"@mui/icons-material\";\r\n\r\ntype StyledTextField = {\r\n\tprefix?: ReactNode;\r\n\tsuffix?: ReactNode;\r\n\tdisabled?: boolean;\r\n\tlabel: string;\r\n\tmaxLength: number;\r\n\tvalue: string;\r\n\tonChange: (value: string) => void;\r\n\tonReset: () => void;\r\n};\r\nexport const StyledTextField: FC<\r\n\tStyledTextField\r\n> = (props) => {\r\n\tconst {\r\n\t\tdisabled,\r\n\t\tmaxLength,\r\n\t\tprefix,\r\n\t\tsuffix,\r\n\t\tlabel,\r\n\t\tvalue,\r\n\t\tonChange,\r\n\t\tonReset,\r\n\t} = props;\r\n\r\n\tconst handleValueChange = (\r\n\t\tevent: ChangeEvent<\r\n\t\t\tHTMLInputElement | HTMLTextAreaElement\r\n\t\t>,\r\n\t) => {\r\n\t\tconst nextValue = event.target.value\r\n\t\t\t.slice(0, maxLength)\r\n\t\t\t.normalize();\r\n\t\tonChange(nextValue);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledHorizontalStack>\r\n\t\t\t<TextField\r\n\t\t\t\tfullWidth\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\tlabel={label}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={handleValueChange}\r\n\t\t\t\tInputProps={{\r\n\t\t\t\t\tstartAdornment: (\r\n\t\t\t\t\t\t<InputAdornment\r\n\t\t\t\t\t\t\tposition=\"start\"\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{prefix}\r\n\t\t\t\t\t\t\t<Divider\r\n\t\t\t\t\t\t\t\tflexItem\r\n\t\t\t\t\t\t\t\torientation=\"vertical\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t),\r\n\t\t\t\t\tendAdornment: (\r\n\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t{suffix}\r\n\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t),\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<TooltipIconButton\r\n\t\t\t\ttitle={`Reset ${label}`}\r\n\t\t\t\tlabel={`Reset ${label}`}\r\n\t\t\t\tonClick={() => onReset()}\r\n\t\t\t>\r\n\t\t\t\t<RestartAltRounded />\r\n\t\t\t</TooltipIconButton>\r\n\t\t</StyledHorizontalStack>\r\n\t);\r\n};\r\n","import { FC } from \"react\";\r\n\r\nimport { Stack, Typography } from \"@mui/material\";\r\n\r\nimport { CollapseRegion } from \"components/CollapseRegion\";\r\nimport { StyledSelect } from \"components/StyledSelect\";\r\nimport { StyledTextField } from \"components/StyledTextField\";\r\n\r\nimport {\r\n\tFACILITY_REGISTRY,\r\n\tGAME_VERSION,\r\n\tPROLIFERATOR_REGISTERY,\r\n\tProliferatorMode,\r\n\tRECIPE_REGISTRY,\r\n\tRecipeType,\r\n\tproliferatorFromLabel,\r\n\tproliferatorLabelFromSprayCount,\r\n} from \"assets/index.mts\";\r\nimport { ingredientIconFromLabel } from \"assets/ingredient.mts\";\r\n\r\nconst FACILITY_OPTIONS = Object.values(\r\n\tFACILITY_REGISTRY,\r\n).map(({ label }) => label);\r\nconst RECIPE_OPTIONS = Object.values(\r\n\tRECIPE_REGISTRY,\r\n).map(({ label }) => label);\r\nconst PROLIF_OPTIONS = Object.values(\r\n\tPROLIFERATOR_REGISTERY,\r\n).map(({ label }) => label);\r\n\r\nconst getDisabledRecipeOptions = (\r\n\tcurrRecipeType: RecipeType,\r\n) =>\r\n\tObject.values(RECIPE_REGISTRY)\r\n\t\t.filter(\r\n\t\t\t({ recipeType }) =>\r\n\t\t\t\trecipeType !== currRecipeType,\r\n\t\t)\r\n\t\t.map(({ label }) => label);\r\n\r\nconst getDisabledProlifOptions = (\r\n\tspeedupOnly: boolean,\r\n) =>\r\n\tObject.values(PROLIFERATOR_REGISTERY)\r\n\t\t.filter(\r\n\t\t\t({ mode }) =>\r\n\t\t\t\tspeedupOnly &&\r\n\t\t\t\tmode !==\r\n\t\t\t\t\tProliferatorMode.PRODUCTION_SPEEDUP,\r\n\t\t)\r\n\t\t.map(({ label }) => label);\r\n\r\nconst prolifEffectToLabel = (effect: string) => {\r\n\treturn ingredientIconFromLabel(\r\n\t\tproliferatorLabelFromSprayCount(\r\n\t\t\tproliferatorFromLabel(effect).sprayCount,\r\n\t\t),\r\n\t);\r\n};\r\n\r\ntype EditorConfigProps = {\r\n\tspeedupOnly: boolean;\r\n\trecipeType: RecipeType;\r\n\tconnectionCount: number;\r\n\tfacility: string;\r\n\tonFacilityChange: (label: string) => void;\r\n\trecipe: string;\r\n\tonRecipeChange: (label: string) => void;\r\n\tflowrates: Record<string, string>;\r\n\tonFlowrateChange: (\r\n\t\tlabel: string,\r\n\t\tvalue: string,\r\n\t) => void;\r\n\tprolif: string;\r\n\tonProlifChange: (label: string) => void;\r\n\tprolifSpray: string;\r\n\tonProlifSprayChange: (value: string) => void;\r\n\tsorters: Record<string, string>;\r\n\tonSorterChange: (\r\n\t\tlabel: string,\r\n\t\tvalue: string,\r\n\t) => void;\r\n};\r\nexport const EditorConfig: FC<\r\n\tEditorConfigProps\r\n> = (props) => {\r\n\tconst {\r\n\t\tconnectionCount,\r\n\t\trecipeType,\r\n\t\tfacility,\r\n\t\tonFacilityChange,\r\n\t\trecipe,\r\n\t\tonRecipeChange,\r\n\t\tflowrates,\r\n\t\tonFlowrateChange,\r\n\t\tspeedupOnly,\r\n\t\tprolif,\r\n\t\tonProlifChange,\r\n\t\tprolifSpray,\r\n\t\tonProlifSprayChange,\r\n\t\tsorters,\r\n\t\tonSorterChange,\r\n\t} = props;\r\n\treturn (\r\n\t\t<Stack spacing={2}>\r\n\t\t\t<Typography variant=\"h1\">\r\n\t\t\t\tConfiguration\r\n\t\t\t</Typography>\r\n\t\t\t<Typography\r\n\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\tcomponent=\"p\"\r\n\t\t\t>\r\n\t\t\t\tDSP version: {GAME_VERSION}\r\n\t\t\t</Typography>\r\n\t\t\t<CollapseRegion\r\n\t\t\t\ttitle={\r\n\t\t\t\t\t<Typography variant=\"h2\">\r\n\t\t\t\t\t\tManufacturing\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<Stack spacing={2}>\r\n\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\tsortOptions\r\n\t\t\t\t\t\tlabel=\"Facility\"\r\n\t\t\t\t\t\tvalue={facility}\r\n\t\t\t\t\t\tonValueChange={onFacilityChange}\r\n\t\t\t\t\t\toptionToIcon={ingredientIconFromLabel}\r\n\t\t\t\t\t\toptions={FACILITY_OPTIONS}\r\n\t\t\t\t\t\tdisabledOptions={[]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\tsortOptions\r\n\t\t\t\t\t\tlabel=\"Recipe\"\r\n\t\t\t\t\t\tvalue={recipe}\r\n\t\t\t\t\t\tonValueChange={onRecipeChange}\r\n\t\t\t\t\t\toptionToIcon={ingredientIconFromLabel}\r\n\t\t\t\t\t\toptions={RECIPE_OPTIONS}\r\n\t\t\t\t\t\tdisabledOptions={getDisabledRecipeOptions(\r\n\t\t\t\t\t\t\trecipeType,\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Stack>\r\n\t\t\t</CollapseRegion>\r\n\t\t\t<CollapseRegion\r\n\t\t\t\ttitle={\r\n\t\t\t\t\t<Typography variant=\"h2\">\r\n\t\t\t\t\t\tTransport capacity\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<Stack spacing={2}>\r\n\t\t\t\t\t{Object.entries(flowrates).map(\r\n\t\t\t\t\t\t([label, value]) => (\r\n\t\t\t\t\t\t\t<StyledTextField\r\n\t\t\t\t\t\t\t\tkey={label}\r\n\t\t\t\t\t\t\t\tlabel={label}\r\n\t\t\t\t\t\t\t\tmaxLength={6}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\tonChange={(nextValue) =>\r\n\t\t\t\t\t\t\t\t\tonFlowrateChange(\r\n\t\t\t\t\t\t\t\t\t\tlabel,\r\n\t\t\t\t\t\t\t\t\t\tnextValue,\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonReset={() =>\r\n\t\t\t\t\t\t\t\t\tonFlowrateChange(label, \"\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tsuffix=\"/min\"\r\n\t\t\t\t\t\t\t\tprefix={\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\talt={label}\r\n\t\t\t\t\t\t\t\t\t\tsrc={ingredientIconFromLabel(\r\n\t\t\t\t\t\t\t\t\t\t\tlabel,\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Stack>\r\n\t\t\t</CollapseRegion>\r\n\t\t\t<CollapseRegion\r\n\t\t\t\ttitle={\r\n\t\t\t\t\t<Typography variant=\"h2\">\r\n\t\t\t\t\t\tProliferation\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<Stack spacing={2}>\r\n\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\tlabel=\"Proliferator\"\r\n\t\t\t\t\t\tvalue={prolif}\r\n\t\t\t\t\t\tonValueChange={onProlifChange}\r\n\t\t\t\t\t\toptions={PROLIF_OPTIONS}\r\n\t\t\t\t\t\toptionToIcon={prolifEffectToLabel}\r\n\t\t\t\t\t\tdisabledOptions={getDisabledProlifOptions(\r\n\t\t\t\t\t\t\tspeedupOnly,\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<StyledTextField\r\n\t\t\t\t\t\tmaxLength={6}\r\n\t\t\t\t\t\tlabel=\"Uses\"\r\n\t\t\t\t\t\tvalue={prolifSpray}\r\n\t\t\t\t\t\tonChange={onProlifSprayChange}\r\n\t\t\t\t\t\tonReset={() =>\r\n\t\t\t\t\t\t\tonProlifSprayChange(\"\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsuffix=\"sprays\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Stack>\r\n\t\t\t</CollapseRegion>\r\n\t\t\t<CollapseRegion\r\n\t\t\t\ttitle={\r\n\t\t\t\t\t<Typography variant=\"h2\">\r\n\t\t\t\t\t\tSorter connections\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<Stack spacing={2}>\r\n\t\t\t\t\t{Object.entries(sorters).map(\r\n\t\t\t\t\t\t([label, value]) => (\r\n\t\t\t\t\t\t\t<StyledTextField\r\n\t\t\t\t\t\t\t\tkey={label}\r\n\t\t\t\t\t\t\t\tlabel={label}\r\n\t\t\t\t\t\t\t\tmaxLength={2}\r\n\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\tonReset={() =>\r\n\t\t\t\t\t\t\t\t\tonSorterChange(label, \"0\")\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonChange={(nextValue) =>\r\n\t\t\t\t\t\t\t\t\tonSorterChange(label, nextValue)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tsuffix={`/${connectionCount}`}\r\n\t\t\t\t\t\t\t\tprefix={\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\talt={label}\r\n\t\t\t\t\t\t\t\t\t\tsrc={ingredientIconFromLabel(\r\n\t\t\t\t\t\t\t\t\t\t\tlabel,\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Stack>\r\n\t\t\t</CollapseRegion>\r\n\t\t</Stack>\r\n\t);\r\n};\r\n","import {\r\n\tList,\r\n\tListItem,\r\n\tListItemIcon,\r\n\tListItemText,\r\n\tPaper,\r\n} from \"@mui/material\";\r\nimport { FC, ReactNode } from \"react\";\r\n\r\ntype InfoListProps = {\r\n\tsubheader: string;\r\n\tinfo: {\r\n\t\ticon: ReactNode;\r\n\t\tprimary: ReactNode;\r\n\t\tsecondary: ReactNode;\r\n\t}[];\r\n};\r\nexport const InfoList: FC<InfoListProps> = (\r\n\tprops,\r\n) => {\r\n\tconst { subheader, info } = props;\r\n\treturn (\r\n\t\t<Paper\r\n\t\t\tsquare\r\n\t\t\televation={2}\r\n\t\t\tsx={{\r\n\t\t\t\tpadding: 2,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<List\r\n\t\t\t\tdense\r\n\t\t\t\tsubheader={subheader}\r\n\t\t\t>\r\n\t\t\t\t{info.map(\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t{ icon, primary, secondary },\r\n\t\t\t\t\t\tindex,\r\n\t\t\t\t\t) => (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={`${subheader}-item-${index}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListItemIcon>{icon}</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={primary}\r\n\t\t\t\t\t\t\t\tsecondary={secondary}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t),\r\n\t\t\t\t)}\r\n\t\t\t</List>\r\n\t\t</Paper>\r\n\t);\r\n};\r\n","import { Fragment, FC } from \"react\";\r\nimport {\r\n\tBox,\r\n\tGrid,\r\n\tStack,\r\n\tTypography,\r\n\tuseMediaQuery,\r\n\tuseTheme,\r\n} from \"@mui/material\";\r\nimport {\r\n\tAbcRounded,\r\n\tAddRounded,\r\n\tBattery80Sharp,\r\n\tBoltRounded,\r\n\tCategoryRounded,\r\n\tDataSaverOffRounded,\r\n\tFactoryRounded,\r\n\tRemoveRounded,\r\n\tSpeedRounded,\r\n\tUsbRounded,\r\n} from \"@mui/icons-material\";\r\n\r\nimport { facilityFromLabel } from \"assets/facility.mts\";\r\nimport { recipeFromLabel } from \"assets/recipes/recipe.mts\";\r\nimport { proliferatorFromLabel } from \"assets/proliferator.mts\";\r\n\r\nimport { InfoList } from \"components/InfoCard\";\r\n\r\nimport { formatNumber } from \"core/formatLocaleNumber\";\r\n\r\ntype EditorResultAuxProps = {\r\n\tfacilityNeededCount: number;\r\n\tarrayNeededCount: number;\r\n\tfacilityPerArrayCount: number;\r\n\tfacilityLeftoverCount: number;\r\n\r\n\tfacilityLabel: string;\r\n\trecipeLabel: string;\r\n\tprolifLabel: string;\r\n\tprolifSpray: string;\r\n};\r\nexport const EditorResultAux: FC<\r\n\tEditorResultAuxProps\r\n> = (props) => {\r\n\tconst {\r\n\t\tfacilityNeededCount,\r\n\t\tarrayNeededCount,\r\n\t\tfacilityPerArrayCount,\r\n\t\tfacilityLeftoverCount,\r\n\t\tfacilityLabel,\r\n\t\trecipeLabel,\r\n\t\tprolifLabel,\r\n\t\tprolifSpray,\r\n\t} = props;\r\n\r\n\tconst theme = useTheme();\r\n\tconst isSmallScreen = useMediaQuery(\r\n\t\ttheme.breakpoints.down(\"md\"),\r\n\t);\r\n\r\n\tconst facility = facilityFromLabel(\r\n\t\tfacilityLabel,\r\n\t);\r\n\tconst recipe = recipeFromLabel(recipeLabel);\r\n\tconst prolif =\r\n\t\tproliferatorFromLabel(prolifLabel);\r\n\r\n\tconst layoutInfo = [\r\n\t\t{\r\n\t\t\ticon: <FactoryRounded />,\r\n\t\t\tprimary: facilityPerArrayCount,\r\n\t\t\tsecondary: \"Facilities per array\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <FactoryRounded />,\r\n\t\t\tprimary: arrayNeededCount,\r\n\t\t\tsecondary: \"Arrays needed\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <FactoryRounded />,\r\n\t\t\tprimary: facilityNeededCount,\r\n\t\t\tsecondary: \"Total facilities needed\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <FactoryRounded />,\r\n\t\t\tprimary: facilityLeftoverCount,\r\n\t\t\tsecondary: \"Leftover facilities\",\r\n\t\t},\r\n\t];\r\n\r\n\tconst facilityInfo = [\r\n\t\t{\r\n\t\t\ticon: <AbcRounded />,\r\n\t\t\tprimary: facility.label,\r\n\t\t\tsecondary: \"Name\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <CategoryRounded />,\r\n\t\t\tprimary: facility.recipeType,\r\n\t\t\tsecondary: \"Category\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <SpeedRounded />,\r\n\t\t\tprimary: `${formatNumber(\r\n\t\t\t\tfacility.cycleMultiplier * 100,\r\n\t\t\t)}%`,\r\n\t\t\tsecondary: \"Cycle speed\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <UsbRounded />,\r\n\t\t\tprimary: facility.connectionCount,\r\n\t\t\tsecondary: \"Sorter connections\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <BoltRounded />,\r\n\t\t\tprimary: `${formatNumber(\r\n\t\t\t\tfacility.workConsumptionMW,\r\n\t\t\t)} MW`,\r\n\t\t\tsecondary: \"Work comsumption\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <BoltRounded />,\r\n\t\t\tprimary: `${formatNumber(\r\n\t\t\t\tfacility.idleConsumptionMW,\r\n\t\t\t)} MW`,\r\n\t\t\tsecondary: \"Idle comsumption\",\r\n\t\t},\r\n\t];\r\n\r\n\tconst recipeInfo = [\r\n\t\t{\r\n\t\t\ticon: <SpeedRounded />,\r\n\t\t\tprimary: `${formatNumber(\r\n\t\t\t\trecipe.cycleTimeSecond,\r\n\t\t\t)} s`,\r\n\t\t\tsecondary: \"Cycle time\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <DataSaverOffRounded />,\r\n\t\t\tprimary: recipe.speedupOnly ? \"No\" : \"Yes\",\r\n\t\t\tsecondary: \"Extra products bonus\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <RemoveRounded />,\r\n\t\t\tprimary: Object.entries(\r\n\t\t\t\trecipe.materialRecord,\r\n\t\t\t).map(([label, ratio]) => (\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tkey={label}\r\n\t\t\t\t\tfontSize=\"inherit\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{`${ratio} ${label}`}\r\n\t\t\t\t</Typography>\r\n\t\t\t)),\r\n\t\t\tsecondary: \"Materials\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <AddRounded />,\r\n\t\t\tprimary: Object.entries(\r\n\t\t\t\trecipe.productRecord,\r\n\t\t\t).map(([label, ratio]) => (\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tkey={label}\r\n\t\t\t\t\tfontSize=\"inherit\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{`${ratio} ${label}`}\r\n\t\t\t\t</Typography>\r\n\t\t\t)),\r\n\t\t\tsecondary: \"Products\",\r\n\t\t},\r\n\t];\r\n\r\n\tconst prolifInfo = [\r\n\t\t{\r\n\t\t\ticon: <SpeedRounded />,\r\n\t\t\tprimary: `${formatNumber(\r\n\t\t\t\t(prolif.cycleMultiplier - 1) * 100,\r\n\t\t\t)}%`,\r\n\t\t\tsecondary: \"Bonus cycle speed\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <SpeedRounded />,\r\n\t\t\tprimary: `${formatNumber(\r\n\t\t\t\t(prolif.productMultiplier - 1) * 100,\r\n\t\t\t)}%`,\r\n\t\t\tsecondary: \"Bonus products per cycle\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <BoltRounded />,\r\n\t\t\tprimary: `${formatNumber(\r\n\t\t\t\t(prolif.workConsumptionMultiplier - 1) *\r\n\t\t\t\t\t100,\r\n\t\t\t)}%`,\r\n\t\t\tsecondary: \"Additional work consumption\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: <Battery80Sharp />,\r\n\t\t\tprimary: formatNumber(\r\n\t\t\t\tprolifSpray === \"\"\r\n\t\t\t\t\t? 0\r\n\t\t\t\t\t: Number.parseInt(prolifSpray),\r\n\t\t\t),\r\n\t\t\tsecondary: \"Sprays\",\r\n\t\t},\r\n\t];\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{isSmallScreen && (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<InfoList\r\n\t\t\t\t\t\tsubheader=\"Layout\"\r\n\t\t\t\t\t\tinfo={layoutInfo}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InfoList\r\n\t\t\t\t\t\tsubheader=\"Facility infomation\"\r\n\t\t\t\t\t\tinfo={facilityInfo}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InfoList\r\n\t\t\t\t\t\tsubheader=\"Recipe information\"\r\n\t\t\t\t\t\tinfo={recipeInfo}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InfoList\r\n\t\t\t\t\t\tsubheader=\"Proliferator effects\"\r\n\t\t\t\t\t\tinfo={prolifInfo}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t\t{!isSmallScreen && (\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tspacing={2}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Stack spacing={2}>\r\n\t\t\t\t\t\t\t\t<InfoList\r\n\t\t\t\t\t\t\t\t\tsubheader=\"Layout\"\r\n\t\t\t\t\t\t\t\t\tinfo={layoutInfo}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<InfoList\r\n\t\t\t\t\t\t\t\t\tsubheader=\"Recipe information\"\r\n\t\t\t\t\t\t\t\t\tinfo={recipeInfo}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Stack spacing={2}>\r\n\t\t\t\t\t\t\t\t<InfoList\r\n\t\t\t\t\t\t\t\t\tsubheader=\"Facility infomation\"\r\n\t\t\t\t\t\t\t\t\tinfo={facilityInfo}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<InfoList\r\n\t\t\t\t\t\t\t\t\tsubheader=\"Proliferator effects\"\r\n\t\t\t\t\t\t\t\t\tinfo={prolifInfo}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useContent = (\r\n\tinitValue: string,\r\n\tstorageKey: string,\r\n) => {\r\n\tconst [content, setContent] = useState<string>(\r\n\t\t() => {\r\n\t\t\tconst savedValue =\r\n\t\t\t\tlocalStorage.getItem(storageKey);\r\n\t\t\tif (savedValue === null) {\r\n\t\t\t\treturn initValue;\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\treturn JSON.parse(savedValue);\r\n\t\t\t} catch {\r\n\t\t\t\treturn initValue;\r\n\t\t\t}\r\n\t\t},\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\r\n\t\t\tstorageKey,\r\n\t\t\tJSON.stringify(content),\r\n\t\t);\r\n\t}, [storageKey, content]);\r\n\r\n\treturn { content, setContent };\r\n};\r\n","import { facilityFromLabel } from \"assets/facility.mts\";\r\nimport { useContent } from \"hooks/useContent\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useFacility = (\r\n\tinitValue: string,\r\n\tstorageKey: string,\r\n) => {\r\n\tconst { content, setContent } = useContent(\r\n\t\tinitValue,\r\n\t\tstorageKey,\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\r\n\t\t\tstorageKey,\r\n\t\t\tJSON.stringify(content),\r\n\t\t);\r\n\t}, [content, storageKey]);\r\n\r\n\tconst setFacilityLabel = (label: string) => {\r\n\t\tconst next = facilityFromLabel(label);\r\n\t\tsetContent(next.label);\r\n\t};\r\n\r\n\treturn {\r\n\t\tfacilityLabel: content,\r\n\t\tsetFacilityLabel,\r\n\t};\r\n};\r\n","import { facilityFromLabel } from \"assets/facility.mts\";\r\nimport { RECIPE_DEFAULT_LOOKUP } from \"assets/index.mts\";\r\nimport { recipeFromLabel } from \"assets/recipes/recipe.mts\";\r\nimport { useContent } from \"hooks/useContent\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useRecipe = (\r\n\tinitValue: string,\r\n\tstorageKey: string,\r\n) => {\r\n\tconst { content, setContent } = useContent(\r\n\t\tinitValue,\r\n\t\tstorageKey,\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\r\n\t\t\tstorageKey,\r\n\t\t\tJSON.stringify(content),\r\n\t\t);\r\n\t}, [content, storageKey]);\r\n\r\n\tconst setRecipeLabel = (label: string) => {\r\n\t\tconst nextRecipe = recipeFromLabel(label);\r\n\t\tsetContent(nextRecipe.label);\r\n\t};\r\n\r\n\tconst updateRecipeLabel = (label: string) => {\r\n\t\tconst nextFacility = facilityFromLabel(label);\r\n\t\tconst nextRecipe = recipeFromLabel(\r\n\t\t\tRECIPE_DEFAULT_LOOKUP[\r\n\t\t\t\tnextFacility.recipeType\r\n\t\t\t],\r\n\t\t);\r\n\t\tsetContent(nextRecipe.label);\r\n\t};\r\n\r\n\treturn {\r\n\t\trecipeLabel: content,\r\n\t\tsetRecipeLabel,\r\n\t\tupdateRecipeLabel,\r\n\t};\r\n};\r\n","import {\r\n\tProliferatorMode,\r\n\tproliferatorFromLabel,\r\n} from \"assets/index.mts\";\r\nimport { recipeFromLabel } from \"assets/recipes/recipe.mts\";\r\nimport { useContent } from \"hooks/useContent\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useProlifEffect = (\r\n\tinitValue: string,\r\n\tstorageKey: string,\r\n) => {\r\n\tconst { content, setContent } = useContent(\r\n\t\tinitValue,\r\n\t\tstorageKey,\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\r\n\t\t\tstorageKey,\r\n\t\t\tJSON.stringify(content),\r\n\t\t);\r\n\t}, [content, storageKey]);\r\n\r\n\tconst setProlifEffectLabel = (\r\n\t\tprolifLlabel: string,\r\n\t) => {\r\n\t\tconst nextProlif =\r\n\t\t\tproliferatorFromLabel(prolifLlabel);\r\n\t\tsetContent(nextProlif.label);\r\n\t};\r\n\r\n\tconst updateProlifEffectLabel = (\r\n\t\trecipeLabel: string,\r\n\t) => {\r\n\t\tconst nextRecipe =\r\n\t\t\trecipeFromLabel(recipeLabel);\r\n\r\n\t\tsetContent((prevProlifLabel) => {\r\n\t\t\tconst prevProlif = proliferatorFromLabel(\r\n\t\t\t\tprevProlifLabel,\r\n\t\t\t);\r\n\t\t\tif (\r\n\t\t\t\tnextRecipe.speedupOnly &&\r\n\t\t\t\tprevProlif.mode ===\r\n\t\t\t\t\tProliferatorMode.EXTRA_PRODUCTS\r\n\t\t\t) {\r\n\t\t\t\treturn \"None\";\r\n\t\t\t}\r\n\t\t\treturn prevProlifLabel;\r\n\t\t});\r\n\t};\r\n\r\n\treturn {\r\n\t\tprolifEffectLabel: content,\r\n\t\tsetProlifEffectLabel,\r\n\t\tupdateProlifEffectLabel,\r\n\t};\r\n};\r\n","export const safeParseClamp = (\r\n\tvalue: string,\r\n\tminValue: number,\r\n\tmaxValue: number,\r\n): number => {\r\n\tconst parsedValue = Number.parseInt(value);\r\n\tif (Number.isNaN(parsedValue)) {\r\n\t\treturn minValue;\r\n\t}\r\n\tif (parsedValue > maxValue) {\r\n\t\treturn maxValue;\r\n\t}\r\n\tif (parsedValue < minValue) {\r\n\t\treturn minValue;\r\n\t}\r\n\treturn parsedValue;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useRecord = (\r\n\tinitValue: Record<string, string>,\r\n\tstorageKey: string,\r\n) => {\r\n\tconst [content, setContent] = useState<\r\n\t\tRecord<string, string>\r\n\t>(() => {\r\n\t\tconst savedValue =\r\n\t\t\tlocalStorage.getItem(storageKey);\r\n\t\tif (savedValue === null) {\r\n\t\t\treturn initValue;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treturn JSON.parse(savedValue);\r\n\t\t} catch {\r\n\t\t\treturn initValue;\r\n\t\t}\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\r\n\t\t\tstorageKey,\r\n\t\t\tJSON.stringify(content),\r\n\t\t);\r\n\t}, [content, storageKey]);\r\n\r\n\tconst resetContent = (\r\n\t\tlabels: string[],\r\n\t\tvalue: string,\r\n\t) => {\r\n\t\tconst nextRecord: Record<string, string> = {};\r\n\t\tfor (const label of labels) {\r\n\t\t\tnextRecord[label] = value;\r\n\t\t}\r\n\t\tsetContent(nextRecord);\r\n\t};\r\n\r\n\treturn { content, setContent, resetContent };\r\n};\r\n","import { safeParseClamp } from \"core/safeParseClamp\";\r\nimport { useRecord } from \"hooks/useRecord\";\r\n\r\nexport const useSorterRecord = (\r\n\tinitValue: Record<string, string>,\r\n\tstorageKey: string,\r\n) => {\r\n\tconst { content, setContent } = useRecord(\r\n\t\tinitValue,\r\n\t\tstorageKey,\r\n\t);\r\n\r\n\tconst updateSorterRecord = (\r\n\t\tsorterLabel: string,\r\n\t\tvalue: string,\r\n\t\tconnectionCount: number,\r\n\t) => {\r\n\t\tsetContent((prev) => {\r\n\t\t\tconst next = { ...prev };\r\n\t\t\tif (value === \"\") {\r\n\t\t\t\tnext[sorterLabel] = \"\";\r\n\t\t\t\treturn next;\r\n\t\t\t}\r\n\r\n\t\t\tlet leftover = connectionCount;\r\n\t\t\tfor (const entry of Object.entries(next)) {\r\n\t\t\t\tconst [prevLabel, prevValue] = entry;\r\n\t\t\t\tif (prevLabel === sorterLabel) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tleftover -= safeParseClamp(\r\n\t\t\t\t\tprevValue,\r\n\t\t\t\t\t0,\r\n\t\t\t\t\tleftover,\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tconst nextValue = safeParseClamp(\r\n\t\t\t\tvalue,\r\n\t\t\t\t0,\r\n\t\t\t\tleftover,\r\n\t\t\t);\r\n\t\t\tnext[sorterLabel] = nextValue.toString();\r\n\t\t\treturn next;\r\n\t\t});\r\n\t};\r\n\treturn {\r\n\t\tsorterRecord: content,\r\n\t\tupdateSorterRecord,\r\n\t};\r\n};\r\n","import { safeParseClamp } from \"core/safeParseClamp\";\r\nimport { useRecord } from \"hooks/useRecord\";\r\n\r\nexport const useFlowrateRecord = (\r\n\tinitValue: Record<string, string>,\r\n\tstorageKey: string,\r\n) => {\r\n\tconst { content, setContent, resetContent } =\r\n\t\tuseRecord(initValue, storageKey);\r\n\r\n\tconst updateFlowrateRecord = (\r\n\t\titemLabel: string,\r\n\t\tvalue: string,\r\n\t\tconnectionCount: number,\r\n\t) => {\r\n\t\tsetContent((prev) => {\r\n\t\t\tconst next = { ...prev };\r\n\t\t\tif (value === \"\") {\r\n\t\t\t\tnext[itemLabel] = \"\";\r\n\t\t\t\treturn next;\r\n\t\t\t}\r\n\r\n\t\t\tlet leftover = connectionCount * 7200;\r\n\t\t\tfor (const entry of Object.entries(next)) {\r\n\t\t\t\tconst [prevLabel, prevValue] = entry;\r\n\t\t\t\tif (prevLabel === itemLabel) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tleftover -= safeParseClamp(\r\n\t\t\t\t\tprevValue,\r\n\t\t\t\t\t7200,\r\n\t\t\t\t\tleftover,\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tconst nextValue = safeParseClamp(\r\n\t\t\t\tvalue,\r\n\t\t\t\t0,\r\n\t\t\t\tleftover,\r\n\t\t\t);\r\n\t\t\tnext[itemLabel] = nextValue.toString();\r\n\t\t\treturn next;\r\n\t\t});\r\n\t};\r\n\treturn {\r\n\t\tflowrateRecord: content,\r\n\t\tupdateFlowrateRecord,\r\n\t\tsetFlowrateRecord: resetContent,\r\n\t};\r\n};\r\n","import { safeParseClamp } from \"core/safeParseClamp\";\r\nimport { useRecord } from \"hooks/useRecord\";\r\n\r\nexport const useClampedRecord = (\r\n\tinitValue: Record<string, string>,\r\n\tstorageKey: string,\r\n) => {\r\n\tconst { content, setContent, resetContent } =\r\n\t\tuseRecord(initValue, storageKey);\r\n\r\n\tconst updateClampedRecord = (\r\n\t\tlabel: string,\r\n\t\tvalue: string,\r\n\t) => {\r\n\t\tsetContent((prev) => {\r\n\t\t\tconst next = { ...prev };\r\n\t\t\tif (value === \"\") {\r\n\t\t\t\tnext[label] = \"\";\r\n\t\t\t\treturn next;\r\n\t\t\t}\r\n\t\t\tconst nextValue = safeParseClamp(\r\n\t\t\t\tvalue,\r\n\t\t\t\t0,\r\n\t\t\t\t1e7,\r\n\t\t\t);\r\n\t\t\tnext[label] = nextValue.toString();\r\n\t\t\treturn next;\r\n\t\t});\r\n\t};\r\n\r\n\treturn {\r\n\t\tclampedRecord: content,\r\n\t\tupdateClampedRecord: updateClampedRecord,\r\n\t\tsetClampedRecord: resetContent,\r\n\t};\r\n};\r\n","import { FC, Fragment, ReactNode } from \"react\";\r\nimport {\r\n\tBox,\r\n\tGrid,\r\n\tPaper,\r\n\tStack,\r\n\tuseMediaQuery,\r\n\tuseTheme,\r\n} from \"@mui/material\";\r\n\r\nconst EditorLayoutXS: FC<EditorLayoutProps> = (\r\n\tprops,\r\n) => {\r\n\tconst { slotConfig, slotResult } = props;\r\n\treturn (\r\n\t\t<Stack\r\n\t\t\tpadding={2}\r\n\t\t\tspacing={2}\r\n\t\t>\r\n\t\t\t<Paper\r\n\t\t\t\tsquare\r\n\t\t\t\televation={1}\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tpadding: 2,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{slotConfig}\r\n\t\t\t</Paper>\r\n\t\t\t{slotResult}\r\n\t\t</Stack>\r\n\t);\r\n};\r\n\r\nconst EditorLayoutSM: FC<EditorLayoutProps> = (\r\n\tprops,\r\n) => {\r\n\tconst { slotResult, slotConfig } = props;\r\n\r\n\treturn (\r\n\t\t<Grid\r\n\t\t\tcontainer\r\n\t\t\tcolumns={10}\r\n\t\t>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\tmd\r\n\t\t\t>\r\n\t\t\t\t<Box\r\n\t\t\t\t\tpadding={4}\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\theight: \"100vh\",\r\n\t\t\t\t\t\toverflowY: \"auto\",\r\n\t\t\t\t\t\tscrollbarWidth: \"thin\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{slotResult}\r\n\t\t\t\t</Box>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\tmd={3}\r\n\t\t\t>\r\n\t\t\t\t<Paper\r\n\t\t\t\t\tsquare\r\n\t\t\t\t\televation={1}\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\theight: \"100vh\",\r\n\t\t\t\t\t\toverflowY: \"auto\",\r\n\t\t\t\t\t\tscrollbarWidth: \"thin\",\r\n\t\t\t\t\t\tpadding: 2,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{slotConfig}\r\n\t\t\t\t</Paper>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\ntype EditorLayoutProps = {\r\n\tslotConfig: ReactNode;\r\n\tslotResult: ReactNode;\r\n};\r\nexport const EditorLayout: FC<\r\n\tEditorLayoutProps\r\n> = (props) => {\r\n\tconst theme = useTheme();\r\n\tconst isSmallScreen = useMediaQuery(\r\n\t\ttheme.breakpoints.down(\"md\"),\r\n\t);\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{isSmallScreen && (\r\n\t\t\t\t<Paper\r\n\t\t\t\t\tsquare\r\n\t\t\t\t\televation={0}\r\n\t\t\t\t>\r\n\t\t\t\t\t<EditorLayoutXS {...props} />\r\n\t\t\t\t</Paper>\r\n\t\t\t)}\r\n\t\t\t{!isSmallScreen && (\r\n\t\t\t\t<Paper\r\n\t\t\t\t\tsquare\r\n\t\t\t\t\televation={0}\r\n\t\t\t\t>\r\n\t\t\t\t\t<EditorLayoutSM {...props} />\r\n\t\t\t\t</Paper>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n","import { FC } from \"react\";\r\n\r\nimport {\r\n\tStack,\r\n\tTypography,\r\n\tPaper,\r\n\tTabs,\r\n\tTab,\r\n\tGrid,\r\n\tBox,\r\n} from \"@mui/material\";\r\n\r\nimport { StyledTextField } from \"components/StyledTextField\";\r\nimport { ingredientIconFromLabel } from \"assets/ingredient.mts\";\r\n\r\ntype EditorTargetProps = {\r\n\tmode: string;\r\n\tonModeChange: (mode: string) => void;\r\n\tcapacityRecord: Record<string, string>;\r\n\tonCapacityChange: (\r\n\t\titemLabel: string,\r\n\t\tvalue: string,\r\n\t) => void;\r\n\tconstraintRecord: Record<string, string>;\r\n\tonConstraintChange: (\r\n\t\titemLabel: string,\r\n\t\tvalue: string,\r\n\t) => void;\r\n};\r\nexport const EditorTarget: FC<\r\n\tEditorTargetProps\r\n> = (props) => {\r\n\tconst {\r\n\t\tmode,\r\n\t\tcapacityRecord,\r\n\t\tconstraintRecord,\r\n\t\tonModeChange,\r\n\t\tonCapacityChange,\r\n\t\tonConstraintChange,\r\n\t} = props;\r\n\r\n\tconst header =\r\n\t\tmode === \"0\"\r\n\t\t\t? \"Production constraint\"\r\n\t\t\t: \"Production capacity\";\r\n\r\n\tconst subheader =\r\n\t\tmode === \"0\"\r\n\t\t\t? \"Compute result based on available material.\"\r\n\t\t\t: \"Compute result based on desired \tproduction capacity material.\";\r\n\r\n\tconst targetItems =\r\n\t\tmode === \"0\"\r\n\t\t\t? constraintRecord\r\n\t\t\t: capacityRecord;\r\n\r\n\tconst targetCallback =\r\n\t\tmode === \"0\"\r\n\t\t\t? onConstraintChange\r\n\t\t\t: onCapacityChange;\r\n\r\n\treturn (\r\n\t\t<Paper\r\n\t\t\tsquare\r\n\t\t\televation={2}\r\n\t\t\tsx={{ padding: 2 }}\r\n\t\t>\r\n\t\t\t<Stack spacing={2}>\r\n\t\t\t\t<Tabs\r\n\t\t\t\t\tvalue={mode}\r\n\t\t\t\t\tonChange={(_, value) =>\r\n\t\t\t\t\t\tonModeChange(value)\r\n\t\t\t\t\t}\r\n\t\t\t\t\taria-label=\"basic tabs example\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Tab\r\n\t\t\t\t\t\tlabel=\"Constraint\"\r\n\t\t\t\t\t\tvalue=\"0\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Tab\r\n\t\t\t\t\t\tlabel=\"Capacity\"\r\n\t\t\t\t\t\tvalue=\"1\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Tabs>\r\n\t\t\t\t<Typography variant=\"h2\">\r\n\t\t\t\t\t{header}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tparagraph\r\n\t\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\t\tcomponent=\"p\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{subheader}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Box>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tspacing={2}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Object.entries(targetItems).map(\r\n\t\t\t\t\t\t\t([label, value]) => (\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\t\tkey={label}\r\n\t\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<StyledTextField\r\n\t\t\t\t\t\t\t\t\t\tlabel={label}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength={6}\r\n\t\t\t\t\t\t\t\t\t\tsuffix=\"/min\"\r\n\t\t\t\t\t\t\t\t\t\tprefix={\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\talt={label}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={ingredientIconFromLabel(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel,\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(nextValue) =>\r\n\t\t\t\t\t\t\t\t\t\t\ttargetCallback(\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel,\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextValue,\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tonReset={() =>\r\n\t\t\t\t\t\t\t\t\t\t\ttargetCallback(label, \"0\")\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\t\t\t</Stack>\r\n\t\t</Paper>\r\n\t);\r\n};\r\n","// Input-oriented solvers\r\n\r\nimport { facilityFromLabel } from \"assets/facility.mts\";\r\nimport { proliferatorFromLabel } from \"assets/proliferator.mts\";\r\nimport { recipeFromLabel } from \"assets/recipes/recipe.mts\";\r\n\r\n// Computes the number of facility which consumes the lowest material transport capacity\r\n// E.g. For circuit board (1x copper ingot, 2x iron ingot)\r\n// If the constraint is given as\r\n// - 200x copper ingot per minute\r\n// - 300x iron ingot per minute\r\n// then the calculated number of arc smelter is 3 (45x copper ingot per minute per facility, 90 iron ingot per minute per facility)\r\n// This way, the calculator does not tap into resource which does not exist\r\n// or exceed the constraint.\r\n\r\nexport const solveFacilityNeededCountConstraint =\r\n\t(\r\n\t\tfacilityLabel: string,\r\n\t\trecipeLabel: string,\r\n\t\tprolifEffectLabel: string,\r\n\t\tconstraintRecord: Record<string, string>,\r\n\t) => {\r\n\t\tconst _facility = facilityFromLabel(\r\n\t\t\tfacilityLabel,\r\n\t\t);\r\n\t\tconst _recipe = recipeFromLabel(recipeLabel);\r\n\t\tconst _prolif = proliferatorFromLabel(\r\n\t\t\tprolifEffectLabel,\r\n\t\t);\r\n\t\tconst _constraintRecord: Record<\r\n\t\t\tstring,\r\n\t\t\tnumber\r\n\t\t> = {};\r\n\t\tfor (const entry of Object.entries(\r\n\t\t\tconstraintRecord,\r\n\t\t)) {\r\n\t\t\tconst [itemLabel, value] = entry;\r\n\t\t\tlet parsedValue = Number.parseInt(value);\r\n\t\t\tif (Number.isNaN(parsedValue)) {\r\n\t\t\t\tparsedValue = 0;\r\n\t\t\t}\r\n\t\t\t_constraintRecord[itemLabel] = parsedValue;\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tObject.values(_constraintRecord).every(\r\n\t\t\t\t(value) => value === 0,\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tconst cycleMuliplier =\r\n\t\t\t_facility.cycleMultiplier *\r\n\t\t\t_prolif.cycleMultiplier;\r\n\r\n\t\tconst cyclesPerMinitePerFacility =\r\n\t\t\t(60 / _recipe.cycleTimeSecond) *\r\n\t\t\tcycleMuliplier;\r\n\r\n\t\tlet needed = 0;\r\n\t\tfor (const entry of Object.entries(\r\n\t\t\t_recipe.materialRecord,\r\n\t\t)) {\r\n\t\t\tconst [label, ratio] = entry;\r\n\t\t\tconst itemFlowrate =\r\n\t\t\t\tratio * cyclesPerMinitePerFacility;\r\n\t\t\tconst currNeeded =\r\n\t\t\t\t_constraintRecord[label] / itemFlowrate;\r\n\r\n\t\t\tif (\r\n\t\t\t\t(currNeeded > 0 && needed === 0) ||\r\n\t\t\t\tcurrNeeded < needed\r\n\t\t\t) {\r\n\t\t\t\tneeded = currNeeded;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn needed;\r\n\t};\r\n","// Output-oriented solver\r\n\r\nimport { facilityFromLabel } from \"assets/facility.mts\";\r\nimport { proliferatorFromLabel } from \"assets/proliferator.mts\";\r\nimport { recipeFromLabel } from \"assets/recipes/recipe.mts\";\r\n\r\nexport const solveFacilityNeededCountCapacity = (\r\n\tfacilityLabel: string,\r\n\trecipeLabel: string,\r\n\tprolifEffectLabel: string,\r\n\tcapacityRecord: Record<string, string>,\r\n): number => {\r\n\tconst _facility = facilityFromLabel(\r\n\t\tfacilityLabel,\r\n\t);\r\n\tconst _recipe = recipeFromLabel(recipeLabel);\r\n\tconst _prolif = proliferatorFromLabel(\r\n\t\tprolifEffectLabel,\r\n\t);\r\n\tconst _capacityRecord: Record<string, number> =\r\n\t\t{};\r\n\tfor (const entry of Object.entries(\r\n\t\tcapacityRecord,\r\n\t)) {\r\n\t\tconst [itemLabel, value] = entry;\r\n\t\tlet parsedValue = Number.parseInt(value);\r\n\t\tif (Number.isNaN(parsedValue)) {\r\n\t\t\tparsedValue = 0;\r\n\t\t}\r\n\t\t_capacityRecord[itemLabel] = parsedValue;\r\n\t}\r\n\r\n\tif (\r\n\t\tObject.values(_capacityRecord).every(\r\n\t\t\t(value) => value === 0,\r\n\t\t)\r\n\t) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tconst productMultiplier =\r\n\t\t_prolif.productMultiplier;\r\n\r\n\tconst cycleMuliplier =\r\n\t\t_facility.cycleMultiplier *\r\n\t\t_prolif.cycleMultiplier;\r\n\tconst cyclesPerMinutePerFacility =\r\n\t\t(60 / _recipe.cycleTimeSecond) *\r\n\t\tcycleMuliplier;\r\n\r\n\tlet needed = 0;\r\n\tfor (const entry of Object.entries(\r\n\t\t_recipe.productRecord,\r\n\t)) {\r\n\t\tconst [itemLabel, ratio] = entry;\r\n\t\tconst itemFlowrate =\r\n\t\t\tratio *\r\n\t\t\tcyclesPerMinutePerFacility *\r\n\t\t\tproductMultiplier;\r\n\t\tconst currNeeded =\r\n\t\t\t_capacityRecord[itemLabel] / itemFlowrate;\r\n\t\tif (currNeeded > needed) {\r\n\t\t\tneeded = currNeeded;\r\n\t\t}\r\n\t}\r\n\r\n\treturn needed;\r\n};\r\n","import { FC } from \"react\";\r\nimport { Stack } from \"@mui/material\";\r\n\r\nimport { facilityFromLabel } from \"assets/facility.mts\";\r\nimport {\r\n\tRECIPE_DEFAULT_LOOKUP,\r\n\trecipeFromLabel,\r\n} from \"assets/recipes/recipe.mts\";\r\n\r\nimport {\r\n\tsolveDemandPerMinutePerFacility,\r\n\tsolveFacilityPerArrayCount,\r\n\tsolveIdleConsumptionMWPerFacility,\r\n\tsolveProductionPerMinutePerFacility,\r\n\tsolveWorkConsumptionMWPerFacility,\r\n} from \"core/solver\";\r\n\r\nimport { EditorResultItemTable } from \"components/EditorResultItemTable\";\r\nimport { EditorResultPowerTable } from \"components/EditorResultPowerTable\";\r\nimport { EditorConfig } from \"components/EditorConfig\";\r\nimport { EditorResultAux } from \"components/EditorResultAux\";\r\n\r\nimport { useContent } from \"hooks/useContent\";\r\nimport { useFacility } from \"hooks/useFacility\";\r\nimport { useRecipe } from \"hooks/useRecipe\";\r\nimport { useProlifEffect as useProlifEffect } from \"hooks/useProlifEffect\";\r\nimport { useSorterRecord } from \"hooks/useSorterRecord\";\r\nimport { useFlowrateRecord } from \"hooks/useFlowrateRecord\";\r\nimport { useClampedRecord } from \"hooks/useClampedRecord\";\r\n\r\nimport { EditorLayout } from \"./EditorLayout\";\r\nimport { EditorTarget } from \"components/EditorTarget\";\r\nimport { solveFacilityNeededCountConstraint } from \"core/solverConstraint\";\r\nimport { solveFacilityNeededCountCapacity } from \"core/solverCapacity\";\r\n\r\nexport const Editor: FC = () => {\r\n\tconst {\r\n\t\tsorterRecord,\r\n\t\tupdateSorterRecord: setSorterRecord,\r\n\t} = useSorterRecord(\r\n\t\t{\r\n\t\t\t\"Sorter Mk.I\": \"0\",\r\n\t\t\t\"Sorter Mk.II\": \"0\",\r\n\t\t\t\"Sorter Mk.III\": \"0\",\r\n\t\t\t\"Pile Sorter\": \"0\",\r\n\t\t},\r\n\t\t\"sorters\",\r\n\t);\r\n\tconst {\r\n\t\tflowrateRecord,\r\n\t\tsetFlowrateRecord,\r\n\t\tupdateFlowrateRecord,\r\n\t} = useFlowrateRecord({}, \"flowrates\");\r\n\tconst {\r\n\t\tclampedRecord: constraintRecord,\r\n\t\tsetClampedRecord: setConstraintRecord,\r\n\t\tupdateClampedRecord: updateConstraintRecord,\r\n\t} = useClampedRecord({}, \"constraintRecord\");\r\n\tconst {\r\n\t\tclampedRecord: capacityRecord,\r\n\t\tsetClampedRecord: setCapacityRecord,\r\n\t\tupdateClampedRecord: updateCapacityRecord,\r\n\t} = useClampedRecord({}, \"capacityRecord\");\r\n\tconst {\r\n\t\tcontent: prolifSprayCount,\r\n\t\tsetContent: setProlifSprayCount,\r\n\t} = useContent(\"0\", \"sprayCount\");\r\n\r\n\tconst { facilityLabel, setFacilityLabel } =\r\n\t\tuseFacility(\"Arc Smelter\", \"activeFacility\");\r\n\r\n\tconst { recipeLabel, setRecipeLabel } =\r\n\t\tuseRecipe(\"Copper Ingot\", \"activeRecipe\");\r\n\r\n\tconst {\r\n\t\tprolifEffectLabel,\r\n\t\tsetProlifEffectLabel,\r\n\t\tupdateProlifEffectLabel,\r\n\t} = useProlifEffect(\"None\", \"activeProlif\");\r\n\tconst { content: mode, setContent: setMode } =\r\n\t\tuseContent(\"0\", \"mode\");\r\n\r\n\tconst handleFacilityChange = (\r\n\t\tlabel: string,\r\n\t) => {\r\n\t\tsetFacilityLabel(label);\r\n\t\tconst nextFacility = facilityFromLabel(label);\r\n\t\tconst nextRecipe = recipeFromLabel(\r\n\t\t\tRECIPE_DEFAULT_LOOKUP[\r\n\t\t\t\tnextFacility.recipeType\r\n\t\t\t],\r\n\t\t);\r\n\t\thandleRecipeChange(nextRecipe.label);\r\n\t};\r\n\r\n\tconst handleRecipeChange = (\r\n\t\tnextRecipeLabel: string,\r\n\t) => {\r\n\t\tsetRecipeLabel(nextRecipeLabel);\r\n\t\tupdateProlifEffectLabel(nextRecipeLabel);\r\n\r\n\t\tconst nextRecipe = recipeFromLabel(\r\n\t\t\tnextRecipeLabel,\r\n\t\t);\r\n\t\tsetConstraintRecord(\r\n\t\t\tObject.keys(nextRecipe.materialRecord),\r\n\t\t\t\"\",\r\n\t\t);\r\n\t\tsetCapacityRecord(\r\n\t\t\tObject.keys(nextRecipe.productRecord),\r\n\t\t\t\"\",\r\n\t\t);\r\n\t\tsetFlowrateRecord(\r\n\t\t\tObject.keys({\r\n\t\t\t\t...nextRecipe.materialRecord,\r\n\t\t\t\t...nextRecipe.productRecord,\r\n\t\t\t}),\r\n\t\t\t\"0\",\r\n\t\t);\r\n\t};\r\n\r\n\tconst handleSorterRecordChange = (\r\n\t\titemLabel: string,\r\n\t\tvalue: string,\r\n\t) => {\r\n\t\tsetSorterRecord(\r\n\t\t\titemLabel,\r\n\t\t\tvalue,\r\n\t\t\tfacility.connectionCount,\r\n\t\t);\r\n\t};\r\n\r\n\tconst handleFlowrateRecordChange = (\r\n\t\titemLabel: string,\r\n\t\tvalue: string,\r\n\t) => {\r\n\t\tupdateFlowrateRecord(\r\n\t\t\titemLabel,\r\n\t\t\tvalue,\r\n\t\t\tfacility.connectionCount,\r\n\t\t);\r\n\t};\r\n\r\n\tconst handleProlifChange = (\r\n\t\tprolifLabel: string,\r\n\t) => {\r\n\t\tsetProlifEffectLabel(prolifLabel);\r\n\t\tsetProlifSprayCount(\"0\");\r\n\t};\r\n\r\n\tconst facility = facilityFromLabel(\r\n\t\tfacilityLabel,\r\n\t);\r\n\tconst recipe = recipeFromLabel(recipeLabel);\r\n\r\n\tlet facilityNeededCount = 0;\r\n\tif (mode === \"0\") {\r\n\t\tfacilityNeededCount =\r\n\t\t\tsolveFacilityNeededCountConstraint(\r\n\t\t\t\tfacilityLabel,\r\n\t\t\t\trecipeLabel,\r\n\t\t\t\tprolifEffectLabel,\r\n\t\t\t\tconstraintRecord,\r\n\t\t\t);\r\n\t} else {\r\n\t\tfacilityNeededCount =\r\n\t\t\tsolveFacilityNeededCountCapacity(\r\n\t\t\t\tfacilityLabel,\r\n\t\t\t\trecipeLabel,\r\n\t\t\t\tprolifEffectLabel,\r\n\t\t\t\tcapacityRecord,\r\n\t\t\t);\r\n\t}\r\n\r\n\tconst facilityPerArrayCount =\r\n\t\tsolveFacilityPerArrayCount(\r\n\t\t\tfacilityLabel,\r\n\t\t\trecipeLabel,\r\n\t\t\tprolifEffectLabel,\r\n\t\t\tflowrateRecord,\r\n\t\t);\r\n\r\n\tconst materialPerMinutePerFacility =\r\n\t\tsolveDemandPerMinutePerFacility(\r\n\t\t\tfacilityLabel,\r\n\t\t\trecipeLabel,\r\n\t\t\tprolifEffectLabel,\r\n\t\t\tprolifSprayCount,\r\n\t\t);\r\n\r\n\tconst productPerMinutePerFacility =\r\n\t\tsolveProductionPerMinutePerFacility(\r\n\t\t\tfacilityLabel,\r\n\t\t\trecipeLabel,\r\n\t\t\tprolifEffectLabel,\r\n\t\t);\r\n\r\n\tlet arrayNeededCount = 0;\r\n\tif (facilityPerArrayCount > 0) {\r\n\t\tarrayNeededCount = Math.floor(\r\n\t\t\tfacilityNeededCount / facilityPerArrayCount,\r\n\t\t);\r\n\t}\r\n\r\n\tconst facilityLeftoverCount =\r\n\t\tfacilityNeededCount -\r\n\t\tarrayNeededCount * facilityPerArrayCount;\r\n\r\n\tconst workConsumptionPerFacility =\r\n\t\tsolveWorkConsumptionMWPerFacility(\r\n\t\t\tfacilityLabel,\r\n\t\t\tprolifEffectLabel,\r\n\t\t\tsorterRecord,\r\n\t\t);\r\n\r\n\tconst idleConsumptionPerFacility =\r\n\t\tsolveIdleConsumptionMWPerFacility(\r\n\t\t\tfacilityLabel,\r\n\t\t\tsorterRecord,\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<EditorLayout\r\n\t\t\tslotConfig={\r\n\t\t\t\t<EditorConfig\r\n\t\t\t\t\tspeedupOnly={recipe.speedupOnly}\r\n\t\t\t\t\trecipeType={recipe.recipeType}\r\n\t\t\t\t\tconnectionCount={\r\n\t\t\t\t\t\tfacility.connectionCount\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfacility={facilityLabel}\r\n\t\t\t\t\tonFacilityChange={handleFacilityChange}\r\n\t\t\t\t\trecipe={recipeLabel}\r\n\t\t\t\t\tonRecipeChange={handleRecipeChange}\r\n\t\t\t\t\tflowrates={flowrateRecord}\r\n\t\t\t\t\tonFlowrateChange={\r\n\t\t\t\t\t\thandleFlowrateRecordChange\r\n\t\t\t\t\t}\r\n\t\t\t\t\tprolif={prolifEffectLabel}\r\n\t\t\t\t\tonProlifChange={handleProlifChange}\r\n\t\t\t\t\tprolifSpray={prolifSprayCount}\r\n\t\t\t\t\tonProlifSprayChange={\r\n\t\t\t\t\t\tsetProlifSprayCount\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsorters={sorterRecord}\r\n\t\t\t\t\tonSorterChange={\r\n\t\t\t\t\t\thandleSorterRecordChange\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t\tslotResult={\r\n\t\t\t\t<Stack spacing={2}>\r\n\t\t\t\t\t<EditorTarget\r\n\t\t\t\t\t\tmode={mode}\r\n\t\t\t\t\t\tconstraintRecord={constraintRecord}\r\n\t\t\t\t\t\tcapacityRecord={capacityRecord}\r\n\t\t\t\t\t\tonModeChange={setMode}\r\n\t\t\t\t\t\tonCapacityChange={\r\n\t\t\t\t\t\t\tupdateCapacityRecord\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonConstraintChange={\r\n\t\t\t\t\t\t\tupdateConstraintRecord\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<EditorResultItemTable\r\n\t\t\t\t\t\tfacilityNeededCount={\r\n\t\t\t\t\t\t\tfacilityNeededCount\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfacilityPerArrayCount={\r\n\t\t\t\t\t\t\tfacilityPerArrayCount\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmaterialFlowPerMinutePerFacility={\r\n\t\t\t\t\t\t\tmaterialPerMinutePerFacility\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tproductFlowPerMinutePerFacility={\r\n\t\t\t\t\t\t\tproductPerMinutePerFacility\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<EditorResultPowerTable\r\n\t\t\t\t\t\tfacilityNeededCount={\r\n\t\t\t\t\t\t\tfacilityNeededCount\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfacilityPerArrayCount={\r\n\t\t\t\t\t\t\tfacilityPerArrayCount\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tidleConsumptionPerFacility={\r\n\t\t\t\t\t\t\tidleConsumptionPerFacility\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tworkConsumptionPerFacility={\r\n\t\t\t\t\t\t\tworkConsumptionPerFacility\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<EditorResultAux\r\n\t\t\t\t\t\tarrayNeededCount={arrayNeededCount}\r\n\t\t\t\t\t\tfacilityPerArrayCount={\r\n\t\t\t\t\t\t\tfacilityPerArrayCount\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfacilityNeededCount={\r\n\t\t\t\t\t\t\tfacilityNeededCount\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfacilityLeftoverCount={\r\n\t\t\t\t\t\t\tfacilityLeftoverCount\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfacilityLabel={facilityLabel}\r\n\t\t\t\t\t\trecipeLabel={recipeLabel}\r\n\t\t\t\t\t\tprolifLabel={prolifEffectLabel}\r\n\t\t\t\t\t\tprolifSpray={prolifSprayCount}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Stack>\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n};\r\n","import { FC } from \"react\";\r\nimport {\r\n\tThemeProvider,\r\n\tCssBaseline,\r\n} from \"@mui/material\";\r\n\r\nimport { theme } from \"./theme\";\r\nimport { Editor } from \"App/pages/Editor\";\r\n\r\nexport const App: FC = () => {\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Editor />\r\n\t\t</ThemeProvider>\r\n\t);\r\n};\r\n","import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport { App } from \"./App\";\r\n\r\nimport \"@fontsource/roboto/300.css\";\r\nimport \"@fontsource/roboto/400.css\";\r\nimport \"@fontsource/roboto/500.css\";\r\nimport \"@fontsource/roboto/700.css\";\r\n\r\ncreateRoot(\r\n\tdocument.getElementById(\"root\") as HTMLElement,\r\n).render(\r\n\t<StrictMode>\r\n\t\t<App />\r\n\t</StrictMode>,\r\n);\r\n"],"names":["theme","createTheme","t","alpha","solveFacilityPerArrayCount","facilityLabel","recipeLabel","prolifEffectLabel","flowrateRecord","_facility","facilityFromLabel","_recipe","recipeFromLabel","_prolifEffect","proliferatorFromLabel","_flowrateRecord","entry","itemLabel","flowrate","parsedFlowrate","cycleMuliplier","cyclesPerMinutePerFacility","productMultiplier","materialBottleNeck","ratio","currBottleNeck","productBottleNeck","solveIdleConsumptionMWPerFacility","sorterRecord","sorterIdleConsumptionMW","sorterLabel","count","parsedCount","sorterFromLabel","solveWorkConsumptionMWPerFacility","sorterWorkConsumptionMW","facility","prolifEffect","solveDemandPerMinutePerFacility","prolifSprayCount","cycleTimeSecond","materialRecord","productRecord","cycles","demand","_prolifSprayCount","prolifMaterialCost","prolifProductCost","prolifLabel","proliferatorLabelFromSprayCount","solveProductionPerMinutePerFacility","production","formatNumber","value","labelToIcon","label","ingredientIconFromLabel","EditorResultItemTable","props","facilityNeededCount","facilityPerArrayCount","materialFlowPerMinutePerFacility","productFlowPerMinutePerFacility","jsx","Paper","TableContainer","jsxs","Table","TableHead","TableRow","TableCell","TableBody","data","index","Typography","Remove","AddRounded","EditorResultPowerTable","workConsumptionPerFacility","idleConsumptionPerFacility","CollapseRegion","title","children","collapsed","setCollapsed","useState","handleCollapseToggle","Fragment","Stack","Tooltip","IconButton","ExpandMoreRounded","ExpandLessRounded","Collapse","StyledSelect","sortOptions","onValueChange","optionToIcon","options","disabledOptions","_options","option","_disabledOptions","TextField","event","MenuItem","ListItemIcon","ListItemText","StyledHorizontalStack","rest","TooltipIconButton","onClick","StyledTextField","disabled","maxLength","prefix","suffix","onChange","onReset","handleValueChange","nextValue","InputAdornment","Divider","RestartAltRounded","FACILITY_OPTIONS","FACILITY_REGISTRY","RECIPE_OPTIONS","RECIPE_REGISTRY","PROLIF_OPTIONS","PROLIFERATOR_REGISTERY","getDisabledRecipeOptions","currRecipeType","recipeType","getDisabledProlifOptions","speedupOnly","mode","ProliferatorMode","prolifEffectToLabel","effect","EditorConfig","connectionCount","onFacilityChange","recipe","onRecipeChange","flowrates","onFlowrateChange","prolif","onProlifChange","prolifSpray","onProlifSprayChange","sorters","onSorterChange","GAME_VERSION","InfoList","subheader","info","List","icon","primary","secondary","ListItem","EditorResultAux","arrayNeededCount","facilityLeftoverCount","useTheme","isSmallScreen","useMediaQuery","layoutInfo","FactoryRounded","facilityInfo","AbcRounded","CategoryRounded","SpeedRounded","UsbRounded","BoltRounded","recipeInfo","DataSaverOffRounded","RemoveRounded","prolifInfo","Battery80Sharp","Box","Grid","useContent","initValue","storageKey","content","setContent","savedValue","useEffect","useFacility","next","useRecipe","nextRecipe","nextFacility","RECIPE_DEFAULT_LOOKUP","useProlifEffect","prolifLlabel","nextProlif","prevProlifLabel","prevProlif","safeParseClamp","minValue","maxValue","parsedValue","useRecord","labels","nextRecord","useSorterRecord","prev","leftover","prevLabel","prevValue","useFlowrateRecord","resetContent","useClampedRecord","EditorLayoutXS","slotConfig","slotResult","EditorLayoutSM","EditorLayout","EditorTarget","capacityRecord","constraintRecord","onModeChange","onCapacityChange","onConstraintChange","header","targetItems","targetCallback","Tabs","_","Tab","solveFacilityNeededCountConstraint","_prolif","_constraintRecord","cyclesPerMinitePerFacility","needed","itemFlowrate","currNeeded","solveFacilityNeededCountCapacity","_capacityRecord","Editor","setSorterRecord","setFlowrateRecord","updateFlowrateRecord","setConstraintRecord","updateConstraintRecord","setCapacityRecord","updateCapacityRecord","setProlifSprayCount","setFacilityLabel","setRecipeLabel","setProlifEffectLabel","updateProlifEffectLabel","setMode","handleFacilityChange","handleRecipeChange","nextRecipeLabel","handleSorterRecordChange","handleFlowrateRecordChange","handleProlifChange","materialPerMinutePerFacility","productPerMinutePerFacility","App","ThemeProvider","CssBaseline","createRoot","StrictMode"],"mappings":"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"}