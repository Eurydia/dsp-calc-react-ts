{"version":3,"file":"index-gD_Tjdao.js","sources":["../../src/App/theme.ts","../../src/App/components/StyledSelect.tsx","../../src/App/components/StyledTextField.tsx","../../src/App/components/Editor/helper.ts","../../src/App/components/Editor/calculator.ts","../../src/App/components/Editor/EditorLayout.tsx","../../src/App/components/Editor/useContent.ts","../../src/App/components/Editor/useRecord.ts","../../src/App/components/Editor/Editor.tsx","../../src/App/App.tsx","../../src/main.tsx"],"sourcesContent":["import {\r\n\talpha,\r\n\tcreateTheme,\r\n} from \"@mui/material\";\r\n\r\nexport const theme = createTheme({\r\n\tcomponents: {\r\n\t\tMuiTypography: {\r\n\t\t\tstyleOverrides: {\r\n\t\t\t\troot: {\r\n\t\t\t\t\tuserSelect: \"none\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\tpalette: {\r\n\t\tmode: \"dark\",\r\n\t\ttext: {\r\n\t\t\tprimary: alpha(\"#fff\", 0.87),\r\n\t\t},\r\n\t},\r\n});\r\n","import { FC, useMemo } from \"react\";\r\n\r\nimport {\r\n\tMenuItem,\r\n\tTextField,\r\n} from \"@mui/material\";\r\n\r\ntype StyledSelectProps = {\r\n\tsortOptions?: boolean;\r\n\tlabel: string;\r\n\tvalue: string;\r\n\tonValueChange: (nextValue: string) => void;\r\n\toptions: string[];\r\n\tdisabledOptions: string[];\r\n};\r\nexport const StyledSelect: FC<\r\n\tStyledSelectProps\r\n> = (props) => {\r\n\tconst {\r\n\t\tsortOptions,\r\n\t\tlabel,\r\n\t\tvalue,\r\n\t\tonValueChange,\r\n\t\toptions,\r\n\t\tdisabledOptions,\r\n\t} = props;\r\n\r\n\tconst cachedOptions = useMemo(\r\n\t\t() =>\r\n\t\t\tsortOptions ? options.sort() : options,\r\n\t\t[options, sortOptions],\r\n\t);\r\n\tconst cachedDisabledOptions = useMemo(\r\n\t\t() =>\r\n\t\t\tsortOptions\r\n\t\t\t\t? disabledOptions.sort()\r\n\t\t\t\t: disabledOptions,\r\n\t\t[disabledOptions, sortOptions],\r\n\t);\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\tselect\r\n\t\t\tfullWidth\r\n\t\t\tlabel={label}\r\n\t\t\tvalue={value}\r\n\t\t\tonChange={(event) =>\r\n\t\t\t\tonValueChange(event.target.value)\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{cachedOptions\r\n\t\t\t\t.filter(\r\n\t\t\t\t\t(option) =>\r\n\t\t\t\t\t\t!cachedDisabledOptions.includes(\r\n\t\t\t\t\t\t\toption,\r\n\t\t\t\t\t\t),\r\n\t\t\t\t)\r\n\t\t\t\t.map((option) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\tkey={option}\r\n\t\t\t\t\t\t\tvalue={option}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t{cachedDisabledOptions.map((option) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\tkey={option}\r\n\t\t\t\t\t\tvalue={option}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{option}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</TextField>\r\n\t);\r\n};\r\n","import {\r\n\tChangeEvent,\r\n\tFC,\r\n\tReactNode,\r\n} from \"react\";\r\nimport {\r\n\tInputAdornment,\r\n\tTextField,\r\n} from \"@mui/material\";\r\n\r\ntype StyledTextField = {\r\n\tprefix?: ReactNode;\r\n\tsuffix?: ReactNode;\r\n\tdisabled?: boolean;\r\n\tlabel: string;\r\n\tmaxLength: number;\r\n\tvalue: string;\r\n\tonChange: (value: string) => void;\r\n};\r\nexport const StyledTextField: FC<\r\n\tStyledTextField\r\n> = (props) => {\r\n\tconst {\r\n\t\tdisabled,\r\n\t\tmaxLength,\r\n\t\tprefix,\r\n\t\tsuffix,\r\n\t\tlabel,\r\n\t\tvalue,\r\n\t\tonChange,\r\n\t} = props;\r\n\r\n\tconst handleValueChange = (\r\n\t\tevent: ChangeEvent<\r\n\t\t\tHTMLInputElement | HTMLTextAreaElement\r\n\t\t>,\r\n\t) => {\r\n\t\tconst nextValue = event.target.value\r\n\t\t\t.slice(0, maxLength)\r\n\t\t\t.normalize();\r\n\t\tonChange(nextValue);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\tfullWidth\r\n\t\t\tdisabled={disabled}\r\n\t\t\tlabel={label}\r\n\t\t\tvalue={value}\r\n\t\t\tonChange={handleValueChange}\r\n\t\t\tInputProps={{\r\n\t\t\t\tstartAdornment: (\r\n\t\t\t\t\t<InputAdornment position=\"start\">\r\n\t\t\t\t\t\t{prefix}\r\n\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t),\r\n\t\t\t\tendAdornment: (\r\n\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t{suffix}\r\n\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t),\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n};\r\n","export const safeParseClamp = (\r\n\tvalue: string,\r\n\tminValue: number,\r\n\tmaxValue: number,\r\n): number => {\r\n\tconst parsedValue = Number.parseInt(value);\r\n\tif (Number.isNaN(parsedValue)) {\r\n\t\treturn minValue;\r\n\t}\r\n\tif (parsedValue > maxValue) {\r\n\t\treturn maxValue;\r\n\t}\r\n\tif (parsedValue < minValue) {\r\n\t\treturn minValue;\r\n\t}\r\n\treturn parsedValue;\r\n};\r\n\r\nexport const sumArray = (\r\n\tvalues: number[],\r\n): number => {\r\n\treturn values.reduce(\r\n\t\t(prev, curr) => prev + curr,\r\n\t\t0,\r\n\t);\r\n};\r\n\r\nexport const formatNumber = (\r\n\tvalue: number,\r\n): string => {\r\n\treturn Number.parseFloat(\r\n\t\tvalue.toPrecision(9),\r\n\t).toPrecision();\r\n};\r\n\r\nexport const loadStorage = <T>(\r\n\tstorageKey: string,\r\n\tfactory: (value: string) => T,\r\n\tfallback: T,\r\n): T => {\r\n\tconst saved = localStorage.getItem(storageKey);\r\n\tif (saved === null) {\r\n\t\treturn fallback;\r\n\t}\r\n\ttry {\r\n\t\treturn factory(JSON.parse(saved));\r\n\t} catch {\r\n\t\treturn fallback;\r\n\t}\r\n};\r\n\r\nexport const getProlifLabel = (\r\n\tsprayCount: number,\r\n): string => {\r\n\tif (sprayCount === 12) {\r\n\t\treturn \"Proliferator Mk.I\";\r\n\t}\r\n\tif (sprayCount === 24) {\r\n\t\treturn \"Proliferator Mk.II\";\r\n\t}\r\n\tif (sprayCount === 60) {\r\n\t\treturn \"Proliferator Mk.III\";\r\n\t}\r\n\treturn \"None\";\r\n};\r\n","import { sorterFromLabel } from \"assets/sorter.mts\";\r\nimport { sumArray } from \"components/Editor/helper\";\r\n\r\nexport const getFacilityPerArrayCount = (\r\n\tcycleTime: number,\r\n\tcycleMuliplier: number,\r\n\tproductMultiplier: number,\r\n\tflowrateRecord: Record<string, string>,\r\n\tmaterialRecord: Record<string, number>,\r\n\tproductRecord: Record<string, number>,\r\n): number => {\r\n\tconst pFlowrateRecord = Object.fromEntries(\r\n\t\tObject.entries(flowrateRecord).map(\r\n\t\t\t([label, value]) => {\r\n\t\t\t\tlet pValue = Number.parseInt(value);\r\n\t\t\t\tif (\r\n\t\t\t\t\tNumber.isNaN(pValue) ||\r\n\t\t\t\t\tpValue === 0\r\n\t\t\t\t) {\r\n\t\t\t\t\tpValue = 360;\r\n\t\t\t\t}\r\n\t\t\t\treturn [label, pValue];\r\n\t\t\t},\r\n\t\t),\r\n\t);\r\n\r\n\tconst cycles =\r\n\t\t(60 / cycleTime) * cycleMuliplier;\r\n\r\n\tconst materialBottleNeck = Math.min(\r\n\t\t...Object.entries(materialRecord).map(\r\n\t\t\t([label, ratio]) => {\r\n\t\t\t\tconst itemFlow = ratio * cycles;\r\n\t\t\t\treturn pFlowrateRecord[label] / itemFlow;\r\n\t\t\t},\r\n\t\t),\r\n\t);\r\n\r\n\tconst productBottleNeck = Math.min(\r\n\t\t...Object.entries(productRecord).map(\r\n\t\t\t([label, ratio]) => {\r\n\t\t\t\tconst itemFlow =\r\n\t\t\t\t\tratio * cycles * productMultiplier;\r\n\t\t\t\treturn pFlowrateRecord[label] / itemFlow;\r\n\t\t\t},\r\n\t\t),\r\n\t);\r\n\r\n\treturn Math.min(\r\n\t\tmaterialBottleNeck,\r\n\t\tproductBottleNeck,\r\n\t);\r\n};\r\n\r\nexport const getFacilityNeededCount = (\r\n\tcycleTime: number,\r\n\tcycleMuliplier: number,\r\n\tproductMultiplier: number,\r\n\tproductRecord: Record<string, number>,\r\n\tdesiredProductRecord: Record<string, string>,\r\n): number => {\r\n\tconst pDesiredProductRecord =\r\n\t\tObject.fromEntries(\r\n\t\t\tObject.entries(desiredProductRecord).map(\r\n\t\t\t\t([label, value]) => {\r\n\t\t\t\t\tlet pValue = Number.parseInt(value);\r\n\t\t\t\t\tif (Number.isNaN(pValue)) {\r\n\t\t\t\t\t\tpValue = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn [label, pValue];\r\n\t\t\t\t},\r\n\t\t\t),\r\n\t\t);\r\n\r\n\tif (\r\n\t\tObject.values(pDesiredProductRecord).every(\r\n\t\t\t(value) => value === 0,\r\n\t\t)\r\n\t) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tconst cycles =\r\n\t\t(60 / cycleTime) * cycleMuliplier;\r\n\r\n\tconst needed = Math.max(\r\n\t\t...Object.entries(productRecord).map(\r\n\t\t\t([label, ratio]) => {\r\n\t\t\t\tconst itemFlow =\r\n\t\t\t\t\tratio * cycles * productMultiplier;\r\n\t\t\t\treturn (\r\n\t\t\t\t\tpDesiredProductRecord[label] / itemFlow\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t),\r\n\t);\r\n\r\n\treturn needed;\r\n};\r\n\r\nconst getSorterConsumption = (\r\n\tsorterRecord: Record<string, string>,\r\n): number => {\r\n\tconst pSorterRecord = Object.fromEntries(\r\n\t\tObject.entries(sorterRecord).map(\r\n\t\t\t([label, value]) => {\r\n\t\t\t\tlet pValue = Number.parseInt(value);\r\n\t\t\t\tif (Number.isNaN(pValue)) {\r\n\t\t\t\t\tpValue = 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn [label, pValue];\r\n\t\t\t},\r\n\t\t),\r\n\t);\r\n\tconst sorterConsumption = sumArray(\r\n\t\tObject.entries(pSorterRecord).map(\r\n\t\t\t([label, value]) =>\r\n\t\t\t\tsorterFromLabel(label).idleConsumptionMW *\r\n\t\t\t\tvalue,\r\n\t\t),\r\n\t);\r\n\treturn sorterConsumption;\r\n};\r\n\r\nexport const getIdleConsumptionPerFacility = (\r\n\tfacilityConsumption: number,\r\n\tsorterRecord: Record<string, string>,\r\n): number => {\r\n\tconst sorterConsumption =\r\n\t\tgetSorterConsumption(sorterRecord);\r\n\treturn facilityConsumption + sorterConsumption;\r\n};\r\n\r\nexport const getWorkConsumptionPerFacility = (\r\n\tfacilityConsumption: number,\r\n\tworkConsumptionMultiplier: number,\r\n\tsorterRecord: Record<string, string>,\r\n): number => {\r\n\tconst sorterConsumption =\r\n\t\tgetSorterConsumption(sorterRecord);\r\n\tconst facilityComputedConsumption =\r\n\t\tfacilityConsumption *\r\n\t\tworkConsumptionMultiplier;\r\n\r\n\treturn (\r\n\t\tfacilityComputedConsumption +\r\n\t\tsorterConsumption\r\n\t);\r\n};\r\n\r\nexport const getDemandPerMinutePerFacility = (\r\n\tcycleTime: number,\r\n\tcycleMuliplier: number,\r\n\tproductMultiplier: number,\r\n\tmaterialRecord: Record<string, number>,\r\n\tproductRecord: Record<string, number>,\r\n\tproliferatorLabel: string,\r\n\tproliferatorUse: string,\r\n): Record<string, number> => {\r\n\tconst cycles =\r\n\t\t(60 / cycleTime) * cycleMuliplier;\r\n\r\n\tconst material = Object.fromEntries(\r\n\t\tObject.entries(materialRecord).map(\r\n\t\t\t([label, ratio]) => [label, ratio * cycles],\r\n\t\t),\r\n\t);\r\n\r\n\tconst pProliferatorUse = Number.parseInt(\r\n\t\tproliferatorUse,\r\n\t);\r\n\tif (\r\n\t\t!Number.isNaN(pProliferatorUse) &&\r\n\t\tpProliferatorUse > 0\r\n\t) {\r\n\t\tmaterial[\r\n\t\t\t`${proliferatorLabel} (on materials)`\r\n\t\t] =\r\n\t\t\tsumArray(\r\n\t\t\t\tObject.values(materialRecord).map(\r\n\t\t\t\t\t(ratio) => cycles * ratio,\r\n\t\t\t\t),\r\n\t\t\t) / pProliferatorUse;\r\n\t\tmaterial[\r\n\t\t\t`${proliferatorLabel} (on products)`\r\n\t\t] =\r\n\t\t\tsumArray(\r\n\t\t\t\tObject.values(productRecord).map(\r\n\t\t\t\t\t(ratio) =>\r\n\t\t\t\t\t\tcycles * ratio * productMultiplier,\r\n\t\t\t\t),\r\n\t\t\t) / pProliferatorUse;\r\n\t}\r\n\treturn material;\r\n};\r\n\r\nexport const getProductionPerMinutePerFacility = (\r\n\tcycleTime: number,\r\n\tcycleMuliplier: number,\r\n\tproductMultiplier: number,\r\n\tproductRecord: Record<string, number>,\r\n): Record<string, number> => {\r\n\tconst cycles =\r\n\t\t(60 / cycleTime) * cycleMuliplier;\r\n\r\n\tconst product = Object.fromEntries(\r\n\t\tObject.entries(productRecord).map(\r\n\t\t\t([label, ratio]) => [\r\n\t\t\t\tlabel,\r\n\t\t\t\tratio * cycles * productMultiplier,\r\n\t\t\t],\r\n\t\t),\r\n\t);\r\n\r\n\treturn product;\r\n};\r\n","import { Children, FC, ReactNode } from \"react\";\r\nimport {\r\n\tGrid,\r\n\tPaper,\r\n\tStack,\r\n\tuseMediaQuery,\r\n\tuseTheme,\r\n} from \"@mui/material\";\r\n\r\nconst EditorLayoutXS: FC<EditorLayoutProps> = (\r\n\tprops,\r\n) => {\r\n\tconst { slotSide, children, slotMain } = props;\r\n\treturn (\r\n\t\t<Stack\r\n\t\t\tpadding={2}\r\n\t\t\tspacing={2}\r\n\t\t>\r\n\t\t\t<Paper sx={{ padding: 2 }}>\r\n\t\t\t\t{slotSide}\r\n\t\t\t</Paper>\r\n\t\t\t{slotMain}\r\n\t\t\t{Children.toArray(children).map(\r\n\t\t\t\t(item, index) => (\r\n\t\t\t\t\t<Paper\r\n\t\t\t\t\t\tkey={`main-col-item-${index}`}\r\n\t\t\t\t\t\tsx={{ padding: 2 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{item}\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t),\r\n\t\t\t)}\r\n\t\t</Stack>\r\n\t);\r\n};\r\n\r\nconst EditorLayoutSM: FC<EditorLayoutProps> = (\r\n\tprops,\r\n) => {\r\n\tconst { children, slotMain, slotSide } = props;\r\n\r\n\treturn (\r\n\t\t<Grid\r\n\t\t\tcontainer\r\n\t\t\theight=\"100vh\"\r\n\t\t>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\tmd={8}\r\n\t\t\t\tpadding={2}\r\n\t\t\t\theight=\"100%\"\r\n\t\t\t\toverflow=\"auto\"\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tscrollbarWidth: \"thin\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\tspacing={2}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\titem\r\n\t\t\t\t\t\tmd={12}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{slotMain}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{[0, 1].map((colIndex) => (\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tkey={`main-col-${colIndex}`}\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\tmd={6}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Stack spacing={2}>\r\n\t\t\t\t\t\t\t\t{Children.toArray(children)\r\n\t\t\t\t\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t\t\t\t\t(_, index) =>\r\n\t\t\t\t\t\t\t\t\t\t\tindex % 2 === colIndex,\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<Paper\r\n\t\t\t\t\t\t\t\t\t\t\tkey={`main-col-${colIndex}-item-${index}`}\r\n\t\t\t\t\t\t\t\t\t\t\tsx={{ padding: 2 }}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid\r\n\t\t\t\titem\r\n\t\t\t\tmd={4}\r\n\t\t\t\theight=\"100%\"\r\n\t\t\t\toverflow=\"auto\"\r\n\t\t\t>\r\n\t\t\t\t<Paper sx={{ padding: 2 }}>\r\n\t\t\t\t\t{slotSide}\r\n\t\t\t\t</Paper>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\ntype EditorLayoutProps = {\r\n\tchildren: ReactNode;\r\n\tslotSide: ReactNode;\r\n\tslotMain: ReactNode;\r\n};\r\nexport const EditorLayout: FC<\r\n\tEditorLayoutProps\r\n> = (props) => {\r\n\tconst { slotSide, slotMain, children } = props;\r\n\tconst theme = useTheme();\r\n\tconst isScreenSizeXS = useMediaQuery(\r\n\t\ttheme.breakpoints.down(\"sm\"),\r\n\t);\r\n\tif (isScreenSizeXS) {\r\n\t\treturn (\r\n\t\t\t<EditorLayoutXS\r\n\t\t\t\tchildren={children}\r\n\t\t\t\tslotMain={slotMain}\r\n\t\t\t\tslotSide={slotSide}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<EditorLayoutSM\r\n\t\t\tchildren={children}\r\n\t\t\tslotMain={slotMain}\r\n\t\t\tslotSide={slotSide}\r\n\t\t/>\r\n\t);\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useContent = (\r\n\tinitValue: string,\r\n\tstorageKey: string,\r\n) => {\r\n\tconst [content, setContent] = useState<string>(\r\n\t\t() => {\r\n\t\t\tconst savedValue =\r\n\t\t\t\tlocalStorage.getItem(storageKey);\r\n\t\t\tif (savedValue === null) {\r\n\t\t\t\treturn initValue;\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\treturn JSON.parse(savedValue);\r\n\t\t\t} catch {\r\n\t\t\t\treturn initValue;\r\n\t\t\t}\r\n\t\t},\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\r\n\t\t\tstorageKey,\r\n\t\t\tJSON.stringify(content),\r\n\t\t);\r\n\t}, [storageKey, content]);\r\n\r\n\treturn { content, setContent };\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useRecord = (\r\n\tinitValue: Record<string, string>,\r\n\tstorageKey: string,\r\n) => {\r\n\tconst [content, setContent] = useState<\r\n\t\tRecord<string, string>\r\n\t>(() => {\r\n\t\tconst savedValue =\r\n\t\t\tlocalStorage.getItem(storageKey);\r\n\t\tif (savedValue === null) {\r\n\t\t\treturn initValue;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treturn JSON.parse(savedValue);\r\n\t\t} catch {\r\n\t\t\treturn initValue;\r\n\t\t}\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(\r\n\t\t\tstorageKey,\r\n\t\t\tJSON.stringify(content),\r\n\t\t);\r\n\t}, [content, storageKey]);\r\n\treturn { content, setContent };\r\n};\r\n","import { FC, useMemo, useState } from \"react\";\r\nimport {\r\n\tDivider,\r\n\tTable,\r\n\tTableBody,\r\n\tTableCell,\r\n\tTableContainer,\r\n\tTableHead,\r\n\tTableRow,\r\n\tIconButton,\r\n\tList,\r\n\tListItem,\r\n\tListItemAvatar,\r\n\tListItemText,\r\n\tStack,\r\n\tTooltip,\r\n\tTypography,\r\n\tPaper,\r\n} from \"@mui/material\";\r\nimport {\r\n\tAbcRounded,\r\n\tAddRounded,\r\n\tBattery80Rounded,\r\n\tBoltRounded,\r\n\tCategoryRounded,\r\n\tDataSaverOffRounded,\r\n\tFactoryRounded,\r\n\tRemove,\r\n\tRemoveRounded,\r\n\tRestartAltRounded,\r\n\tSpeedRounded,\r\n\tUsbRounded,\r\n} from \"@mui/icons-material\";\r\n\r\nimport {\r\n\tFACILITY_REGISTRY,\r\n\tfacilityFromLabel,\r\n} from \"assets/facility.mts\";\r\nimport {\r\n\tRECIPE_REGISTRY,\r\n\trecipeFromLabel,\r\n} from \"assets/recipes/recipe.mts\";\r\nimport {\r\n\tPROLIFERATOR_REGISTERY,\r\n\tProliferatorMode,\r\n\tproliferatorFromLabel,\r\n} from \"assets/proliferator.mts\";\r\nimport { StyledSelect } from \"components/StyledSelect\";\r\n\r\nimport { StyledTextField } from \"components/StyledTextField\";\r\n\r\nimport {\r\n\tgetDemandPerMinutePerFacility,\r\n\tgetFacilityPerArrayCount,\r\n\tgetFacilityNeededCount,\r\n\tgetIdleConsumptionPerFacility,\r\n\tgetProductionPerMinutePerFacility,\r\n\tgetWorkConsumptionPerFacility,\r\n} from \"./calculator\";\r\nimport {\r\n\tsafeParseClamp,\r\n\tsumArray,\r\n\tformatNumber,\r\n\tloadStorage,\r\n\tgetProlifLabel,\r\n} from \"./helper\";\r\nimport { EditorLayout } from \"./EditorLayout\";\r\nimport { useContent } from \"./useContent\";\r\nimport { useRecord } from \"components/Editor/useRecord\";\r\n\r\nexport const Editor: FC = () => {\r\n\tconst {\r\n\t\tcontent: sorters,\r\n\t\tsetContent: setSorters,\r\n\t} = useRecord(\r\n\t\t{\r\n\t\t\t\"Sorter Mk.I\": \"0\",\r\n\t\t\t\"Sorter Mk.II\": \"0\",\r\n\t\t\t\"Sorter Mk.III\": \"0\",\r\n\t\t\t\"Pile Sorter\": \"0\",\r\n\t\t},\r\n\t\t\"sorters\",\r\n\t);\r\n\tconst {\r\n\t\tcontent: flowrates,\r\n\t\tsetContent: setFlowrates,\r\n\t} = useRecord({}, \"flowrates\");\r\n\tconst {\r\n\t\tcontent: desiredProduction,\r\n\t\tsetContent: setDesiredProduction,\r\n\t} = useRecord({}, \"desiredProduction\");\r\n\tconst {\r\n\t\tcontent: sprayCount,\r\n\t\tsetContent: setSprayCount,\r\n\t} = useContent(\"0\", \"sprayCount\");\r\n\tconst [facility, setFacility] = useState(() =>\r\n\t\tloadStorage(\r\n\t\t\t\"activeFacility\",\r\n\t\t\tfacilityFromLabel,\r\n\t\t\tfacilityFromLabel(\"Arc Smelter\"),\r\n\t\t),\r\n\t);\r\n\tconst [recipe, setRecipe] = useState(() =>\r\n\t\tloadStorage(\r\n\t\t\t\"activeRecipe\",\r\n\t\t\trecipeFromLabel,\r\n\t\t\trecipeFromLabel(\"Copper Ingot\"),\r\n\t\t),\r\n\t);\r\n\tconst [prolif, setProlif] = useState(() =>\r\n\t\tloadStorage(\r\n\t\t\t\"activeProlif\",\r\n\t\t\tproliferatorFromLabel,\r\n\t\t\tproliferatorFromLabel(\"None\"),\r\n\t\t),\r\n\t);\r\n\r\n\tconst handleFacilityChange = (\r\n\t\tlabel: string,\r\n\t) => {\r\n\t\tconst nFacility = facilityFromLabel(label);\r\n\t\tsetFacility(nFacility);\r\n\t\tlocalStorage.setItem(\r\n\t\t\t\"activeFacility\",\r\n\t\t\tJSON.stringify(nFacility.label),\r\n\t\t);\r\n\t\tif (\r\n\t\t\trecipe.recipeType === nFacility.recipeType\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet nRecipeLabel = \"Uh oh\";\r\n\t\tconst relatedRecipes = Object.values(\r\n\t\t\tRECIPE_REGISTRY,\r\n\t\t)\r\n\t\t\t.filter(\r\n\t\t\t\t({ recipeType }) =>\r\n\t\t\t\t\trecipeType === nFacility.recipeType,\r\n\t\t\t)\r\n\t\t\t.map(({ label }) => label);\r\n\t\tif (relatedRecipes.length > 0) {\r\n\t\t\tnRecipeLabel = relatedRecipes[0];\r\n\t\t}\r\n\t\thandleRecipeChange(nRecipeLabel);\r\n\t};\r\n\r\n\tconst handleRecipeChange = (label: string) => {\r\n\t\tconst nRecipe = recipeFromLabel(label);\r\n\t\tif (\r\n\t\t\tnRecipe.speedupOnly &&\r\n\t\t\tprolif.mode ===\r\n\t\t\t\tProliferatorMode.EXTRA_PRODUCTS\r\n\t\t) {\r\n\t\t\thandleProlifChange(\"None\");\r\n\t\t}\r\n\t\tsetRecipe(nRecipe);\r\n\t\tlocalStorage.setItem(\r\n\t\t\t\"activeRecipe\",\r\n\t\t\tJSON.stringify(nRecipe.label),\r\n\t\t);\r\n\t\tsetDesiredProduction((prev) => {\r\n\t\t\tconst next: Record<string, string> = {};\r\n\t\t\tfor (const label of Object.keys(\r\n\t\t\t\tnRecipe.productRecord,\r\n\t\t\t)) {\r\n\t\t\t\tnext[label] = prev[label] ?? \"0\";\r\n\t\t\t}\r\n\t\t\treturn next;\r\n\t\t});\r\n\t\tsetFlowrates(() => {\r\n\t\t\tconst next: Record<string, string> = {};\r\n\t\t\tfor (const label of Object.keys(\r\n\t\t\t\tnRecipe.materialRecord,\r\n\t\t\t)) {\r\n\t\t\t\tnext[label] = \"360\";\r\n\t\t\t}\r\n\t\t\tfor (const label of Object.keys(\r\n\t\t\t\tnRecipe.productRecord,\r\n\t\t\t)) {\r\n\t\t\t\tnext[label] = \"360\";\r\n\t\t\t}\r\n\t\t\treturn next;\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleProlifChange = (label: string) => {\r\n\t\tconst nProlif = proliferatorFromLabel(label);\r\n\t\tsetSprayCount(nProlif.sprayCount.toString());\r\n\t\tsetProlif(nProlif);\r\n\t\tlocalStorage.setItem(\r\n\t\t\t\"activeProlif\",\r\n\t\t\tJSON.stringify(nProlif.label),\r\n\t\t);\r\n\t};\r\n\r\n\tconst handleDesiredProductionChange = (\r\n\t\tlabel: string,\r\n\t\tvalue: string,\r\n\t) => {\r\n\t\tsetDesiredProduction((prev) => {\r\n\t\t\tconst next = { ...prev };\r\n\t\t\tif (value === \"\") {\r\n\t\t\t\tnext[label] = \"\";\r\n\t\t\t\treturn next;\r\n\t\t\t}\r\n\t\t\tnext[label] = safeParseClamp(\r\n\t\t\t\tvalue,\r\n\t\t\t\t0,\r\n\t\t\t\t1e7,\r\n\t\t\t).toString();\r\n\t\t\treturn next;\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleFlowrateChange = (\r\n\t\tlabel: string,\r\n\t\tvalue: string,\r\n\t) => {\r\n\t\tsetFlowrates((prev) => {\r\n\t\t\tconst next = { ...prev };\r\n\t\t\tif (value === \"\") {\r\n\t\t\t\tnext[label] = \"\";\r\n\t\t\t\treturn next;\r\n\t\t\t}\r\n\r\n\t\t\tconst maxConnection =\r\n\t\t\t\tfacility.connectionCount * 7200;\r\n\r\n\t\t\tconst leftover = sumArray(\r\n\t\t\t\tObject.entries(prev)\r\n\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t([prevLabel]) => prevLabel !== label,\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.map(([, prevValue]) =>\r\n\t\t\t\t\t\tsafeParseClamp(\r\n\t\t\t\t\t\t\tprevValue,\r\n\t\t\t\t\t\t\t360,\r\n\t\t\t\t\t\t\tmaxConnection,\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t),\r\n\t\t\t);\r\n\r\n\t\t\tnext[label] = safeParseClamp(\r\n\t\t\t\tvalue,\r\n\t\t\t\t0,\r\n\t\t\t\tmaxConnection - leftover,\r\n\t\t\t).toString();\r\n\t\t\treturn next;\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleSorterChange = (\r\n\t\tlabel: string,\r\n\t\tvalue: string,\r\n\t) => {\r\n\t\tsetSorters((prev) => {\r\n\t\t\tconst next = { ...prev };\r\n\t\t\tif (value === \"\") {\r\n\t\t\t\tnext[label] = \"\";\r\n\t\t\t\treturn next;\r\n\t\t\t}\r\n\t\t\tconst leftover = sumArray(\r\n\t\t\t\tObject.entries(prev)\r\n\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t([prevLabel]) => prevLabel !== label,\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.map(([, prevValue]) =>\r\n\t\t\t\t\t\tsafeParseClamp(\r\n\t\t\t\t\t\t\tprevValue,\r\n\t\t\t\t\t\t\t0,\r\n\t\t\t\t\t\t\tfacility.connectionCount,\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t),\r\n\t\t\t);\r\n\t\t\tnext[label] = safeParseClamp(\r\n\t\t\t\tvalue,\r\n\t\t\t\t0,\r\n\t\t\t\tfacility.connectionCount - leftover,\r\n\t\t\t).toString();\r\n\t\t\treturn next;\r\n\t\t});\r\n\t};\r\n\tconsole.time();\r\n\tconst prolifLabel = getProlifLabel(\r\n\t\tprolif.sprayCount,\r\n\t);\r\n\tconst facilityNeededCount = useMemo(\r\n\t\t() =>\r\n\t\t\tgetFacilityNeededCount(\r\n\t\t\t\trecipe.cycleTimeSecond,\r\n\t\t\t\tfacility.cycleMultiplier *\r\n\t\t\t\t\tprolif.cycleMultiplier,\r\n\t\t\t\tprolif.productMultiplier,\r\n\t\t\t\trecipe.productRecord,\r\n\t\t\t\tdesiredProduction,\r\n\t\t\t),\r\n\t\t[\r\n\t\t\trecipe.cycleTimeSecond,\r\n\t\t\tfacility.cycleMultiplier,\r\n\t\t\tprolif.cycleMultiplier,\r\n\t\t\tprolif.productMultiplier,\r\n\t\t\trecipe.productRecord,\r\n\t\t\tdesiredProduction,\r\n\t\t],\r\n\t);\r\n\r\n\tconst facilityPerArrayCount = useMemo(\r\n\t\t() =>\r\n\t\t\tgetFacilityPerArrayCount(\r\n\t\t\t\trecipe.cycleTimeSecond,\r\n\t\t\t\tfacility.cycleMultiplier *\r\n\t\t\t\t\tprolif.cycleMultiplier,\r\n\t\t\t\tprolif.productMultiplier,\r\n\t\t\t\tflowrates,\r\n\t\t\t\trecipe.materialRecord,\r\n\t\t\t\trecipe.productRecord,\r\n\t\t\t),\r\n\t\t[\r\n\t\t\trecipe.cycleTimeSecond,\r\n\t\t\tfacility.cycleMultiplier,\r\n\t\t\tprolif.cycleMultiplier,\r\n\t\t\tprolif.productMultiplier,\r\n\t\t\tflowrates,\r\n\t\t\trecipe.materialRecord,\r\n\t\t\trecipe.productRecord,\r\n\t\t],\r\n\t);\r\n\r\n\tconst arrayNeededCount =\r\n\t\tfacilityPerArrayCount <= 0\r\n\t\t\t? 0\r\n\t\t\t: Math.floor(\r\n\t\t\t\t\tfacilityNeededCount /\r\n\t\t\t\t\t\tfacilityPerArrayCount,\r\n\t\t\t  );\r\n\r\n\tconst facilityLeftoverCount =\r\n\t\tfacilityNeededCount -\r\n\t\tarrayNeededCount * facilityPerArrayCount;\r\n\r\n\tconst workConsumptionPerFacility =\r\n\t\tgetWorkConsumptionPerFacility(\r\n\t\t\tfacility.workConsumptionMW,\r\n\t\t\tprolif.workConsumptionMultiplier,\r\n\t\t\tsorters,\r\n\t\t);\r\n\r\n\tconst idleConsumptionPerFacility =\r\n\t\tgetIdleConsumptionPerFacility(\r\n\t\t\tfacility.idleConsumptionMW,\r\n\t\t\tsorters,\r\n\t\t);\r\n\tconsole.timeEnd();\r\n\r\n\treturn (\r\n\t\t<EditorLayout\r\n\t\t\tslotSide={\r\n\t\t\t\t<Stack\r\n\t\t\t\t\tspacing={4}\r\n\t\t\t\t\tdivider={\r\n\t\t\t\t\t\t<Divider\r\n\t\t\t\t\t\t\tflexItem\r\n\t\t\t\t\t\t\tvariant=\"fullWidth\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Stack spacing={2}>\r\n\t\t\t\t\t\t<Typography>Manufacturing</Typography>\r\n\t\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\t\tsortOptions\r\n\t\t\t\t\t\t\tlabel=\"Facility\"\r\n\t\t\t\t\t\t\tvalue={facility.label}\r\n\t\t\t\t\t\t\tonValueChange={handleFacilityChange}\r\n\t\t\t\t\t\t\toptions={Object.keys(\r\n\t\t\t\t\t\t\t\tFACILITY_REGISTRY,\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\tdisabledOptions={[]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\t\tsortOptions\r\n\t\t\t\t\t\t\tlabel=\"Recipe\"\r\n\t\t\t\t\t\t\tvalue={recipe.label}\r\n\t\t\t\t\t\t\tonValueChange={handleRecipeChange}\r\n\t\t\t\t\t\t\toptions={Object.keys(\r\n\t\t\t\t\t\t\t\tRECIPE_REGISTRY,\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\tdisabledOptions={Object.values(\r\n\t\t\t\t\t\t\t\tRECIPE_REGISTRY,\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t\t\t\t(r) =>\r\n\t\t\t\t\t\t\t\t\t\tr.recipeType !==\r\n\t\t\t\t\t\t\t\t\t\tfacility.recipeType,\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.map((r) => r.label)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t\t<Stack spacing={2}>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tProduction target\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{Object.entries(\r\n\t\t\t\t\t\t\tdesiredProduction,\r\n\t\t\t\t\t\t).map(([label, value]) => (\r\n\t\t\t\t\t\t\t<Stack\r\n\t\t\t\t\t\t\t\tkey={label}\r\n\t\t\t\t\t\t\t\tspacing={2}\r\n\t\t\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\t\tjustifyContent=\"left\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<StyledTextField\r\n\t\t\t\t\t\t\t\t\tlabel={label}\r\n\t\t\t\t\t\t\t\t\tmaxLength={8}\r\n\t\t\t\t\t\t\t\t\tsuffix={`/min`}\r\n\t\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\t\tonChange={(nextValue) =>\r\n\t\t\t\t\t\t\t\t\t\thandleDesiredProductionChange(\r\n\t\t\t\t\t\t\t\t\t\t\tlabel,\r\n\t\t\t\t\t\t\t\t\t\t\tnextValue,\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tdisabled={value === \"0\"}\r\n\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\thandleDesiredProductionChange(\r\n\t\t\t\t\t\t\t\t\t\t\tlabel,\r\n\t\t\t\t\t\t\t\t\t\t\t\"0\",\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Tooltip title=\"Reset\">\r\n\t\t\t\t\t\t\t\t\t\t<RestartAltRounded />\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t\t<Stack spacing={2}>\r\n\t\t\t\t\t\t<Typography>Proliferation</Typography>\r\n\t\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\t\tlabel=\"Proliferator\"\r\n\t\t\t\t\t\t\tvalue={prolif.label}\r\n\t\t\t\t\t\t\tonValueChange={handleProlifChange}\r\n\t\t\t\t\t\t\toptions={Object.keys(\r\n\t\t\t\t\t\t\t\tPROLIFERATOR_REGISTERY,\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\tdisabledOptions={Object.values(\r\n\t\t\t\t\t\t\t\tPROLIFERATOR_REGISTERY,\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.filter(\r\n\t\t\t\t\t\t\t\t\t(p) =>\r\n\t\t\t\t\t\t\t\t\t\trecipe.speedupOnly &&\r\n\t\t\t\t\t\t\t\t\t\tp.mode ===\r\n\t\t\t\t\t\t\t\t\t\t\tProliferatorMode.EXTRA_PRODUCTS,\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.map((p) => p.label)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Stack\r\n\t\t\t\t\t\t\tspacing={2}\r\n\t\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\tjustifyContent=\"left\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<StyledTextField\r\n\t\t\t\t\t\t\t\tdisabled={prolif.sprayCount <= 0}\r\n\t\t\t\t\t\t\t\tmaxLength={9}\r\n\t\t\t\t\t\t\t\tsuffix=\"sprays\"\r\n\t\t\t\t\t\t\t\tlabel=\"Uses\"\r\n\t\t\t\t\t\t\t\tvalue={sprayCount}\r\n\t\t\t\t\t\t\t\tonChange={setSprayCount}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t\tprolif.sprayCount <= 0 ||\r\n\t\t\t\t\t\t\t\t\tprolif.sprayCount.toString() ===\r\n\t\t\t\t\t\t\t\t\t\tsprayCount\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\tsetSprayCount(\r\n\t\t\t\t\t\t\t\t\t\tprolif.sprayCount.toString(),\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Reset\">\r\n\t\t\t\t\t\t\t\t\t<RestartAltRounded />\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t\t<Stack spacing={2}>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tTransport capacity\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{Object.entries(flowrates).map(\r\n\t\t\t\t\t\t\t([label, value]) => (\r\n\t\t\t\t\t\t\t\t<Stack\r\n\t\t\t\t\t\t\t\t\tkey={label}\r\n\t\t\t\t\t\t\t\t\tspacing={2}\r\n\t\t\t\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\t\t\tjustifyContent=\"left\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<StyledTextField\r\n\t\t\t\t\t\t\t\t\t\tlabel={label}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength={8}\r\n\t\t\t\t\t\t\t\t\t\tsuffix={`/min`}\r\n\t\t\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(nextValue) =>\r\n\t\t\t\t\t\t\t\t\t\t\thandleFlowrateChange(\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel,\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextValue,\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tdisabled={value === \"360\"}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\thandleFlowrateChange(\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"360\",\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Reset\">\r\n\t\t\t\t\t\t\t\t\t\t\t<RestartAltRounded />\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t\t<Stack spacing={2}>\r\n\t\t\t\t\t\t<Typography>\r\n\t\t\t\t\t\t\tSorter connections\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{Object.entries(sorters).map(\r\n\t\t\t\t\t\t\t([label, value]) => (\r\n\t\t\t\t\t\t\t\t<Stack\r\n\t\t\t\t\t\t\t\t\tkey={label}\r\n\t\t\t\t\t\t\t\t\tspacing={2}\r\n\t\t\t\t\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\t\t\tjustifyContent=\"left\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<StyledTextField\r\n\t\t\t\t\t\t\t\t\t\tlabel={label}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength={6}\r\n\t\t\t\t\t\t\t\t\t\tsuffix={`/${facility.connectionCount}`}\r\n\t\t\t\t\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(nextValue) =>\r\n\t\t\t\t\t\t\t\t\t\t\thandleSorterChange(\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel,\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextValue,\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tdisabled={value === \"0\"}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\thandleSorterChange(\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"0\",\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Reset\">\r\n\t\t\t\t\t\t\t\t\t\t\t<RestartAltRounded />\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</Stack>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Stack>\r\n\t\t\t}\r\n\t\t\tslotMain={\r\n\t\t\t\t<Stack spacing={2}>\r\n\t\t\t\t\t<Paper sx={{ padding: 2 }}>\r\n\t\t\t\t\t\t<TableContainer>\r\n\t\t\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell colSpan={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tItem (per minute)\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tTotal\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tPer Array\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tPer Facility\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t\t{Object.entries(\r\n\t\t\t\t\t\t\t\t\t\tgetDemandPerMinutePerFacility(\r\n\t\t\t\t\t\t\t\t\t\t\trecipe.cycleTimeSecond,\r\n\t\t\t\t\t\t\t\t\t\t\tprolif.cycleMultiplier *\r\n\t\t\t\t\t\t\t\t\t\t\t\tfacility.cycleMultiplier,\r\n\t\t\t\t\t\t\t\t\t\t\tprolif.productMultiplier,\r\n\t\t\t\t\t\t\t\t\t\t\trecipe.materialRecord,\r\n\t\t\t\t\t\t\t\t\t\t\trecipe.productRecord,\r\n\t\t\t\t\t\t\t\t\t\t\tprolifLabel,\r\n\t\t\t\t\t\t\t\t\t\t\tsprayCount,\r\n\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t).map(([label, value]) => (\r\n\t\t\t\t\t\t\t\t\t\t<TableRow key={label}>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell colSpan={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t{[\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue *\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfacilityNeededCount,\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue *\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfacilityPerArrayCount,\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t\t\t\t\t\t].map((data, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`demand-${index}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent=\"flex-end\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize=\"inherit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Remove fontSize=\"inherit\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{formatNumber(data)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t{Object.entries(\r\n\t\t\t\t\t\t\t\t\t\tgetProductionPerMinutePerFacility(\r\n\t\t\t\t\t\t\t\t\t\t\trecipe.cycleTimeSecond,\r\n\t\t\t\t\t\t\t\t\t\t\tprolif.cycleMultiplier *\r\n\t\t\t\t\t\t\t\t\t\t\t\tfacility.cycleMultiplier,\r\n\t\t\t\t\t\t\t\t\t\t\tprolif.productMultiplier,\r\n\t\t\t\t\t\t\t\t\t\t\trecipe.productRecord,\r\n\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t).map(([label, value]) => (\r\n\t\t\t\t\t\t\t\t\t\t<TableRow key={label}>\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell colSpan={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t{[\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue *\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfacilityNeededCount,\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue *\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfacilityPerArrayCount,\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t\t\t\t\t\t].map((data, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`supply-${index}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent=\"flex-end\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize=\"inherit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<AddRounded fontSize=\"inherit\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{formatNumber(data)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</TableContainer>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t\t<Paper sx={{ padding: 2 }}>\r\n\t\t\t\t\t\t<TableContainer>\r\n\t\t\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell colSpan={3}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tPower consumption (MW)\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tTotal\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tPer array\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\t\t\t\talign=\"right\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tPer facility\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell colSpan={3}>\r\n\t\t\t\t\t\t\t\t\t\t\tWork\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{[\r\n\t\t\t\t\t\t\t\t\t\t\tworkConsumptionPerFacility *\r\n\t\t\t\t\t\t\t\t\t\t\t\tfacilityNeededCount,\r\n\t\t\t\t\t\t\t\t\t\t\tworkConsumptionPerFacility *\r\n\t\t\t\t\t\t\t\t\t\t\t\tfacilityPerArrayCount,\r\n\t\t\t\t\t\t\t\t\t\t\tworkConsumptionPerFacility,\r\n\t\t\t\t\t\t\t\t\t\t].map((value, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={`supply-${index}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent=\"flex-end\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize=\"inherit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Remove fontSize=\"inherit\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{formatNumber(value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t\t\t<TableCell colSpan={3}>\r\n\t\t\t\t\t\t\t\t\t\t\tIdle\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t{[\r\n\t\t\t\t\t\t\t\t\t\t\tidleConsumptionPerFacility *\r\n\t\t\t\t\t\t\t\t\t\t\t\tfacilityNeededCount,\r\n\t\t\t\t\t\t\t\t\t\t\tidleConsumptionPerFacility *\r\n\t\t\t\t\t\t\t\t\t\t\t\tfacilityPerArrayCount,\r\n\t\t\t\t\t\t\t\t\t\t\tidleConsumptionPerFacility,\r\n\t\t\t\t\t\t\t\t\t\t].map((value, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={`supply-${index}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolSpan={1}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent=\"flex-end\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize=\"inherit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Remove fontSize=\"inherit\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{formatNumber(value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t</TableContainer>\r\n\t\t\t\t\t</Paper>\r\n\t\t\t\t</Stack>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<List\r\n\t\t\t\tsubheader=\"Layout\"\r\n\t\t\t\tdense\r\n\t\t\t>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<FactoryRounded />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tprimary={facilityPerArrayCount}\r\n\t\t\t\t\t\tsecondary=\"Facilities per array\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<FactoryRounded />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tprimary={arrayNeededCount}\r\n\t\t\t\t\t\tsecondary=\"Arrays\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<FactoryRounded />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tprimary={facilityNeededCount}\r\n\t\t\t\t\t\tsecondary=\"Total facilities\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<FactoryRounded />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tprimary={facilityLeftoverCount}\r\n\t\t\t\t\t\tsecondary=\"Leftover facilities\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t</List>\r\n\t\t\t<List\r\n\t\t\t\tsubheader=\"Facility information\"\r\n\t\t\t\tdense\r\n\t\t\t>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<AbcRounded />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tprimary={facility.label}\r\n\t\t\t\t\t\tsecondary=\"Name\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<CategoryRounded />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tprimary={facility.recipeType}\r\n\t\t\t\t\t\tsecondary=\"Category\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<SpeedRounded />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tprimary={`${formatNumber(\r\n\t\t\t\t\t\t\tfacility.cycleMultiplier * 100,\r\n\t\t\t\t\t\t)}%`}\r\n\t\t\t\t\t\tsecondary=\"Cycle speed\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<UsbRounded />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tprimary={facility.connectionCount}\r\n\t\t\t\t\t\tsecondary=\"Sorter connections\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<BoltRounded />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tprimary={`${formatNumber(\r\n\t\t\t\t\t\t\tfacility.workConsumptionMW,\r\n\t\t\t\t\t\t)} MW`}\r\n\t\t\t\t\t\tsecondary=\"Work comsumption\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<BoltRounded />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tprimary={`${formatNumber(\r\n\t\t\t\t\t\t\tfacility.idleConsumptionMW,\r\n\t\t\t\t\t\t)} MW`}\r\n\t\t\t\t\t\tsecondary=\"Idle comsumption\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t</List>\r\n\t\t\t<List\r\n\t\t\t\tsubheader=\"Recipe infomation\"\r\n\t\t\t\tdense\r\n\t\t\t>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<SpeedRounded />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tprimary={`${formatNumber(\r\n\t\t\t\t\t\t\trecipe.cycleTimeSecond,\r\n\t\t\t\t\t\t)} s`}\r\n\t\t\t\t\t\tsecondary=\"Cycle time\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<DataSaverOffRounded />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tprimary={\r\n\t\t\t\t\t\t\trecipe.speedupOnly ? \"No\" : \"Yes\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsecondary=\"Extra products bonus\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<RemoveRounded />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tprimary={Object.entries(\r\n\t\t\t\t\t\t\trecipe.materialRecord,\r\n\t\t\t\t\t\t).map(([label, ratio]) => (\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tkey={label}\r\n\t\t\t\t\t\t\t\tfontSize=\"inherit\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{`${ratio} ${label}`}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t\tsecondary=\"Materials\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<AddRounded />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tprimary={Object.entries(\r\n\t\t\t\t\t\t\trecipe.productRecord,\r\n\t\t\t\t\t\t).map(([label, ratio]) => (\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tkey={label}\r\n\t\t\t\t\t\t\t\tfontSize=\"inherit\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{`${ratio} ${label}`}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t\tsecondary=\"Products\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t</List>\r\n\t\t\t<List\r\n\t\t\t\tdense\r\n\t\t\t\tsubheader=\"Proliferator effects\"\r\n\t\t\t>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<BoltRounded />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tprimary={`${formatNumber(\r\n\t\t\t\t\t\t\t(prolif.workConsumptionMultiplier -\r\n\t\t\t\t\t\t\t\t1) *\r\n\t\t\t\t\t\t\t\t100,\r\n\t\t\t\t\t\t)}%`}\r\n\t\t\t\t\t\tsecondary=\"Additional work consumption\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<SpeedRounded />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tprimary={`${formatNumber(\r\n\t\t\t\t\t\t\t(prolif.cycleMultiplier - 1) * 100,\r\n\t\t\t\t\t\t)}%`}\r\n\t\t\t\t\t\tsecondary=\"Bonus cycle speed\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<SpeedRounded />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tprimary={`${formatNumber(\r\n\t\t\t\t\t\t\t(prolif.productMultiplier - 1) *\r\n\t\t\t\t\t\t\t\t100,\r\n\t\t\t\t\t\t)}%`}\r\n\t\t\t\t\t\tsecondary=\"Bonus products per cycle\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<ListItem>\r\n\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t<Battery80Rounded />\r\n\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\tprimary={formatNumber(\r\n\t\t\t\t\t\t\tsprayCount === \"\"\r\n\t\t\t\t\t\t\t\t? 0\r\n\t\t\t\t\t\t\t\t: Number.parseInt(sprayCount),\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\tsecondary=\"Sprays\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ListItem>\r\n\t\t\t</List>\r\n\t\t</EditorLayout>\r\n\t);\r\n};\r\n","import { FC } from \"react\";\r\nimport {\r\n\tThemeProvider,\r\n\tCssBaseline,\r\n} from \"@mui/material\";\r\n\r\nimport { theme } from \"./theme\";\r\nimport { Editor } from \"components/Editor\";\r\n\r\nexport const App: FC = () => {\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<CssBaseline />\r\n\r\n\t\t\t<Editor />\r\n\t\t</ThemeProvider>\r\n\t);\r\n};\r\n","import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport { App } from \"./App\";\r\n\r\nimport \"@fontsource/roboto/300.css\";\r\nimport \"@fontsource/roboto/400.css\";\r\nimport \"@fontsource/roboto/500.css\";\r\nimport \"@fontsource/roboto/700.css\";\r\n\r\ncreateRoot(\r\n\tdocument.getElementById(\"root\") as HTMLElement,\r\n).render(\r\n\t<StrictMode>\r\n\t\t<App />\r\n\t</StrictMode>,\r\n);\r\n"],"names":["theme","createTheme","alpha","StyledSelect","props","sortOptions","label","value","onValueChange","options","disabledOptions","cachedOptions","useMemo","cachedDisabledOptions","jsxs","TextField","event","option","jsx","MenuItem","StyledTextField","disabled","maxLength","prefix","suffix","onChange","handleValueChange","nextValue","InputAdornment","safeParseClamp","minValue","maxValue","parsedValue","sumArray","values","prev","curr","formatNumber","loadStorage","storageKey","factory","fallback","saved","getProlifLabel","sprayCount","getFacilityPerArrayCount","cycleTime","cycleMuliplier","productMultiplier","flowrateRecord","materialRecord","productRecord","pFlowrateRecord","pValue","cycles","materialBottleNeck","ratio","itemFlow","productBottleNeck","getFacilityNeededCount","desiredProductRecord","pDesiredProductRecord","getSorterConsumption","sorterRecord","pSorterRecord","sorterFromLabel","getIdleConsumptionPerFacility","facilityConsumption","sorterConsumption","getWorkConsumptionPerFacility","workConsumptionMultiplier","getDemandPerMinutePerFacility","proliferatorLabel","proliferatorUse","material","pProliferatorUse","getProductionPerMinutePerFacility","EditorLayoutXS","slotSide","children","slotMain","Stack","Paper","Children","item","index","EditorLayoutSM","Grid","colIndex","_","EditorLayout","useTheme","useMediaQuery","useContent","initValue","content","setContent","useState","savedValue","useEffect","useRecord","Editor","sorters","setSorters","flowrates","setFlowrates","desiredProduction","setDesiredProduction","setSprayCount","facility","setFacility","facilityFromLabel","recipe","setRecipe","recipeFromLabel","prolif","setProlif","proliferatorFromLabel","handleFacilityChange","nFacility","nRecipeLabel","relatedRecipes","RECIPE_REGISTRY","recipeType","handleRecipeChange","nRecipe","ProliferatorMode","handleProlifChange","next","nProlif","handleDesiredProductionChange","handleFlowrateChange","maxConnection","leftover","prevLabel","prevValue","handleSorterChange","prolifLabel","facilityNeededCount","facilityPerArrayCount","arrayNeededCount","facilityLeftoverCount","workConsumptionPerFacility","idleConsumptionPerFacility","Divider","Typography","FACILITY_REGISTRY","r","IconButton","Tooltip","RestartAltRounded","PROLIFERATOR_REGISTERY","p","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","data","Remove","AddRounded","List","ListItem","ListItemAvatar","FactoryRounded","ListItemText","AbcRounded","CategoryRounded","SpeedRounded","UsbRounded","BoltRounded","DataSaverOffRounded","RemoveRounded","Battery80Rounded","App","ThemeProvider","CssBaseline","createRoot","StrictMode"],"mappings":"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"}